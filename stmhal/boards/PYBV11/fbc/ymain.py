import pyb
import gc

s1=gc.mem_free()
gc.collect()
s2=gc.mem_free()

def fbc_f(n=0):
    return "from frozen bytecode %d" % (n)

def i2cout_a(i2c, b, addr=98):
    n=len(b)
    p=0
    while n > 0:
        can=i2c.recv(1, addr+1)[0]-1
        if can > 0:
            i2c.send(b[p:p+can], addr)
            print(len(b[p:p+can]))
            n-=can
            p+=can

def i2cout_b(i2c, b, addr=98):
    n=len(b)
    p=0
    can=i2c.recv(1, addr+1)[0]
    if can < 2:
        return
    i2c.send(b'\x02j', addr)
    while n > 0:
        can=i2c.recv(1, addr+1)[0]-1
        if can > 0:
            i2c.send(b[p:p+can], addr)
            #print(len(b[p:p+can]))
            n-=can
            p+=can
    pyb.delay(200)

def dia(i2c, il):
    i=0
    inc=1
    i2c.send(b'\x02X\x00\x00', 98)
    t0=pyb.millis()
    while not sw():
        try:
            i2cout(i2c, il[abs(i)])
            t1=pyb.millis()
            print(t1-t0)
            t0=t1
        except:
            inc=-inc
        i+=inc
        
def d02_diashow(i2c, fba, dt=1000,mask='.*\.jpg'):
    os.chdir('/flash')
    dirlist = os.listdir()
    i2c.send(b'\x02X\x00\x00', 98)
    for x in dirlist:
        if ure.match(mask,x):
            print('\r\n', x, gc.mem_free(), end='')
            f = open(x)
            f.readinto(fba)
            f.close()
            t0=pyb.millis()
            i2cout(i2c,fba)
            t1=pyb.millis()
            print(t1-t0)

def i2cout(i2c, b, addr=98):
    n=len(b)
    p=0
    #ba=b'\x02j\x00\x00'
    ba=bytearray(4)
    ba[0] = 2
    ba[1] = 0x6a
    ba[2] = n & 0xff
    ba[3] = (n >> 8) & 0xff
    while i2c.recv(1, addr+1)[0] < 4:
        pass
    i2c.send(ba, addr)
    while n > 0:
        can=i2c.recv(1, addr+1)[0]-1
        if can > 50:
            #print('.', end='')
            i2c.send(b[p:p+can], addr)
            #print(len(b[p:p+can]))
            n-=can
            p+=can

def cjext(c,ci,n):
    n=abs(n)
    if n < len(ci)-1:
        sum=0
        for i in ci[0:n+1]:
            sum += i
            
        return c[0:ci[0]]+c[sum:sum+ci[n+1]]

def play_jpg(i2c, j):
    i2c.send(b'\x02X\x00\x00', 98)
    for i in range(len(j.cindex)-1):
        i2cout(i2c,cjext(j.img, j.cindex, i))

import uhashlib
import ubinascii

def sa256(b):
    h=uhashlib.sha256(b)
    print(ubinascii.hexlify(h.digest()))

import urandom

def do_tmcs(i2c):
    import tmcs
    sw=pyb.Switch()
    while not sw():
        dt=urandom.randint(200,1000)
        lane=urandom.randint(0,7)
        v=urandom.randint(0,15)
        b=bytearray(4)
        b[0]=2
        b[1]=0x58
        b[2]=8
        b[3]=lane*9+12
        i2c.send(b, 98)
        i2cout(i2c, cjext(tmcs.img, tmcs.cindex, v))
        pyb.delay(dt)

def pos(i2c,x,y):
    b=bytearray(4)
    b[0]=2
    b[1]=0x58
    b[2]=x & 0xff
    b[3]=y & 0xff
    i2c.send(b, 98)

def colors(i2c,fg,bg):
    b=bytearray(6)
    b[0]=2
    b[1]=0x63
    b[2]=fg & 0xff
    b[3]=fg >> 8
    b[4]=bg & 0xff
    b[5]=bg >> 8
    i2c.send(b, 98)

def pen(i2c,fg,bg):
    b=bytearray(6)
    b[0]=2
    b[1]=0x50
    b[2]=fg & 0xff
    b[3]=fg >> 8
    b[4]=bg & 0xff
    b[5]=bg >> 8
    i2c.send(b, 98)

def win(i2c,x, y, w, h):
  dat=bytearray(6)
  dat[0]=2;
  dat[1]=0x79;
  dat[2]=x & 0xff;
  dat[3]=y & 0xff;
  dat[4]=w & 0xff;
  dat[5]=h & 0xff;
  i2c.send(dat, 98)

def rect(i2c,x, y, w, h):
  dat=bytearray(6)
  dat[0]=2;
  dat[1]=0x72;
  dat[2]=x & 0xff;
  dat[3]=y & 0xff;
  dat[4]=w & 0xff;
  dat[5]=h & 0xff;
  i2c.send(dat, 98)

def line(i2c,xa, ya, xe, ye):
  dat=bytearray(6)
  dat[0]=2;
  dat[1]=0x4c;
  dat[2]=xa & 0xff;
  dat[3]=ya & 0xff;
  dat[4]=xe & 0xff;
  dat[5]=ye & 0xff;
  i2c.send(dat, 98)

def pnm_test(i2c, trans=0):
    b=bytearray(11)
    l=6+8
    b[0]=2
    b[1]=0x70
    b[2]=l & 0xff
    b[3]=(l >> 8) & 0xff
    b[4]=0x1+trans
    b[5]=8
    b[6]=8
    b[7]=0
    b[8]=0
    b[9]=0x07
    b[10]=0xe0
    i2c.send(b, 98)
    i2c.send(b'\xaa\x55\xaa\x55\xaa\x55\xaa\x55', 98)

def dba(buf):
    for i in range(len(buf)):
        print('0x%02x,' % (buf[i]), end='')
        if i % 32 == 31:
            print()
    print()

def pnm_1bpp(i2c, buf, trans=0):
    b=bytearray(5)
    l=len(buf)
    b[0]=2
    b[1]=0x70
    b[2]=l & 0xff
    b[3]=(l >> 8) & 0xff
    b[4]=0x1+trans
    i2c.send(b, 98)
    i2cout_a(i2c, buf, 98)

def pnm_test2(i2c, trans=0):
    b=bytearray(15)
    l=10+16
    b[0]=2
    b[1]=0x70
    b[2]=l & 0xff
    b[3]=(l >> 8) & 0xff
    b[4]=2+trans
    b[5]=8
    b[6]=8
    b[7]=0
    b[8]=0
    b[9]=0x00
    b[10]=0x1f
    b[11]=0x07
    b[12]=0xe0
    b[13]=0xf8
    b[14]=0x00
    i2c.send(b, 98)
    i2c.send(b'\x1a\x1b', 98)
    i2c.send(b'\x1a\x1b', 98)
    i2c.send(b'\x1a\x1b', 98)
    i2c.send(b'\x1a\x1b', 98)
    i2c.send(b'\x1a\x1b', 98)
    i2c.send(b'\x1a\x1b', 98)
    i2c.send(b'\x1a\x1b', 98)
    i2c.send(b'\x1a\x1b', 98)

def pnm_test4(i2c, trans=0):
    b=bytearray(23)
    l=18+32
    b[0]=2
    b[1]=0x70
    b[2]=l & 0xff
    b[3]=(l >> 8) & 0xff
    b[4]=4+trans
    b[5]=8
    b[6]=8
    b[7]=0
    b[8]=0
    b[9]=0x00
    b[10]=0x1f
    b[11]=0x07
    b[12]=0xe0
    b[13]=0xf8
    b[14]=0x00
    i2c.send(b, 98)
    for i in range(16):
        i2c.send(b'\x1a\x1b', 98)

def pnm_test8(i2c, trans=0):
    b=bytearray(7)
    l=2+64
    b[0]=2
    b[1]=0x70
    b[2]=l & 0xff
    b[3]=(l >> 8) & 0xff
    b[4]=8+trans
    b[5]=8
    b[6]=8
    i2c.send(b, 98)
    for i in range(32):
        i2c.send(b'\x3f\x00', 98)
        i2c.send(b'\x38\x00', 98)

def pnm_test16(i2c, trans=0):
    b=bytearray(7)
    l=2+128
    b[0]=2
    b[1]=0x70
    b[2]=l & 0xff
    b[3]=(l >> 8) & 0xff
    b[4]=16+trans
    b[5]=8
    b[6]=8
    i2c.send(b, 98)
    for i in range(32):
        i2c.send(b'\xf8\x00\x00\x00', 98)

def pnm_icon1(i2c, icon, lane=1, v=0):
    pos(i2c,8+v,lane*9)
    b=bytearray(7)
    n=len(icon)-2
    b[0]=2
    b[1]=0x70
    b[2]=n & 0xff
    b[3]=(n >> 8) & 0xff
    b[4]=1
    b[5]=icon[0]
    b[6]=icon[2]
    while i2c.recv(1, 99)[0] < 7:
        pass
    i2c.send(b, 98)
    n-=2
    p=4
    while n > 0:
        can=i2c.recv(1, 99)[0]-1
        if can > 50:
            #print('.', end='')
            if n < can:
                can = n
            i2c.send(icon[p:p+can], 98)
            #print(len(b[p:p+can]))
            n-=can
            p+=can

def pnm_icon2(i2c, icon, lane=1, v=0):
    pos(i2c,8+v,3+lane*9)
    b=bytearray(7)
    n=len(icon)-2
    b[0]=2
    b[1]=0x70
    b[2]=n & 0xff
    b[3]=(n >> 8) & 0xff
    b[4]=2
    b[5]=icon[0]
    b[6]=icon[2]
    while i2c.recv(1, 99)[0] < 7:
        pass
    i2c.send(b, 98)
    n-=2
    p=4
    while n > 0:
        can=i2c.recv(1, 99)[0]-1
        if can > 50:
            #print('.', end='')
            if n < can:
                can = n
            i2c.send(icon[p:p+can], 98)
            #print(len(b[p:p+can]))
            n-=can
            p+=can
    while i2c.recv(1, 99)[0] < 50:
        pass

def pnm_icon4(i2c, icon, lane=1, v=0):
    pos(i2c,8+v,lane*9)
    b=bytearray(7)
    n=len(icon)-2
    b[0]=2
    b[1]=0x70
    b[2]=n & 0xff
    b[3]=(n >> 8) & 0xff
    b[4]=4
    b[5]=icon[0]
    b[6]=icon[2]
    while i2c.recv(1, 99)[0] < 7:
        pass
    i2c.send(b, 98)
    n-=2
    p=4
    while n > 0:
        can=i2c.recv(1, 99)[0]-1
        if can > 50:
            #print('.', end='')
            if n < can:
                can = n
            i2c.send(icon[p:p+can], 98)
            #print(len(b[p:p+can]))
            n-=can
            p+=can

def pnm_icon8(i2c, icon, lane=1, v=0):
    pos(i2c,8+v,lane*9)
    b=bytearray(7)
    n=len(icon)-2
    b[0]=2
    b[1]=0x70
    b[2]=n & 0xff
    b[3]=(n >> 8) & 0xff
    b[4]=8
    b[5]=icon[0]
    b[6]=icon[2]
    while i2c.recv(1, 99)[0] < 7:
        pass
    i2c.send(b, 98)
    n-=2
    p=4
    while n > 0:
        can=i2c.recv(1, 99)[0]-1
        if can > 50:
            #print('.', end='')
            if n < can:
                can = n
            i2c.send(icon[p:p+can], 98)
            #print(len(b[p:p+can]))
            n-=can
            p+=can

def pnm_icon16(i2c, icon, lane=1, v=0, zoom=0):
    pos(i2c,8+v,lane*9)
    b=bytearray(7)
    n=len(icon)-2
    b[0]=2
    b[1]=0x70
    b[2]=n & 0xff
    b[3]=(n >> 8) & 0xff
    b[4]=16 | zoom << 6
    b[5]=icon[0]
    b[6]=icon[2]
    while i2c.recv(1, 99)[0] < 7:
        pass
    i2c.send(b, 98)
    n-=2
    p=4
    while n > 0:
        can=i2c.recv(1, 99)[0]-1
        if can > 50:
            #print('.', end='')
            if n < can:
                can = n
            i2c.send(icon[p:p+can], 98)
            #print(len(b[p:p+can]))
            n-=can
            p+=can

def iconl(i2c, img, p):
    i2c.send(b'\x02\x50\x03\x00\x03\x00', 98)
    i2c.send(b'\x02\x72\x00\x00\x08\x54', 98)
    i2c.send(b'\x02\x46\x21\x00', 98)
    pos(i2c, 0, 0);
    i2c.send('Vehicle ', 98);
    pos(i2c, 66, 0);
    i2c.send('Counter', 98);
    i2c.send(b'\x02\x46\x00\x00', 98)
    for i in range(8):
        pos(i2c, 0, 12+i*9);
        i2c.send('%d' % (i+1), 98);
    i2c.send(b'\x02\x15\x01', 98)
    t0=pyb.millis()
    n=0
    while not sw():
        l = urandom.randint(1,8)
        k = urandom.randint(0,15)
        w = img[k*2][0]
        k*=2
        if (l % 2):
            w=128-w-8
        else:
            k+=1
            w=0
        #p(i2c, img[urandom.randint(0,15)], lane=urandom.randint(1,8), v=urandom.randint(0,90))
        p(i2c, img[k], lane=l, v=w)
        n+=1
    i2c.send(b'\x02\x15\x00', 98)
    print(n, pyb.elapsed_millis(t0)/n)

def allicon(i2c, img, p):
    t0=pyb.millis()
    n=0
    for i in range(len(img)):
        p(i2c, img[i], lane=(i & 7)+1, v=(i // 8)*32)
        n+=1
    print(n, pyb.elapsed_millis(t0)/n)

def i2cwait(i2c, n):
    while True:
        b=i2c.recv(1,99)
        if b[0] >= n:
            return
        pyb.delay(1)

def loop(i2c, p=pnm_test, dt=100, trans=0):
    for y in range(0,96,8):
        for x in range(0,128,8):
            pos(i2c,x,y)
            p(i2c, trans)
            i2cwait(i2c, 200)
            pyb.delay(dt) 

def clearin(i2c):
    while i2c.recv(10, 98)[0]: pass


def getview(i2c):
    while i2c.recv(10, 98)[0]: pass
    i2c.send(b'\x02g0', 98)
    pyb.delay(10)
    res = i2c.recv(5, 98)
    if res[0] == 4:
        return res[1], res[2]
    else:
        return

def gettouch(i2c):
    i2c.send(b'\x02T', 98)
    ba = bytearray(4)
    pyb.delay(10)
    i2c.recv(ba, 98)
    if ba[0] == 3:
        return ba[1] >> 7, ba[2],ba[3]
    
def seti2c(i2c, addr):
    i2c.send(b'\x02\x0eI2C\xc0', 98)

def bright(b):
    from struct import pack
    i2c.send(pack('<BBB', 2, 0x16, b), 98)

from struct import pack
ba = bytearray(128)

def oled_getline(x, y, ba):
    # (len(ba) & 1) == 1
    #print('getline %d %d %d' % (x, y, len(ba)))
    cmd = pack('<BBBBB', 2, 0x10, len(ba)//2, x, y)
    i2c.send(cmd, i2c_addr)
    t = 0
    while True:
        if i2c.recv(1, i2c_addr)[0] >= cmd[2]:
            break
        else:
            t += 1
            if t > 1000:
                print('getline timeout')
                break
            pyb.delay(1)
    i2c.recv(ba, i2c_addr)

i2c_addr = 98

def oflush_oled(n=255):
    if n:
        t = 0
        while i2c.recv(1, i2c_addr+1)[0] < n:       # timeout checked
            t += 1
            if t > 1000:
                print('oflush timeout')
                break
            pyb.delay(1)
    return i2c.recv(1, i2c_addr+1)[0]

def sendfile(fn='/sd/lcd_lpc824.spr'):
    ba = bytearray(128)
    f = open(fn)
    sum = 0
    while True:
        n = f.readinto(ba)
        if n > 0:
            sum += n
            oflush_oled()
            i2c.send(ba[:n], i2c_addr)
            print(end='.')
        if n != len(ba):
            print()
            break
    return sum

def dec(n, decode=1):
    ba = bytearray(128+1)
    nn = n // 128
    oled_getline((nn & 1)*64, nn//2, ba)
    nn *= 64
    n = nn
    #off = ((n & 0x1ff) + 0x4553) & 0xffff
    nn &= 0x1ff
    #print('%04x' % (n))
    for i in range(64):
        if i % 16 == 0:
            print('%04x:' % ((n+i)*2), end=' ')
        l = ba[i*2+1] + (ba[i*2+2] << 8)
        if decode:
            l -= ((nn & 0x1ff) + 0x4553 +i)
        print('%04x' % (l & 0xffff), end=' ')
        if i % 16 == 15:
            print()

def calibrate():
    i2c.send(b'\x02z\x01\x00', 98)

def orient(o=4):
    i2c.send(pack('<BBB', 2, 0x14, o), i2c_addr)

def win(x=0, y=0, w=128, h=96):
    i2c.send(pack('<BBBBBB', 2, 0x77, x, y, w, h), i2c_addr)

def polydot(ba):
    i2c.send(pack('<BBB', 2, 0x71, len(ba)//2), i2c_addr)
    for i in range(len(ba)//2):
        i2c.send(ba[i*2:i*2+2], i2c_addr)
    
def polyline(ba):
    i2c.send(pack('<BBB', 2, 0x78, len(ba)//2), i2c_addr)
    for i in range(len(ba)//2):
        i2c.send(ba[i*2:i*2+2], i2c_addr)

def linegraph(ba):
    i2c.send(pack('<BBB', 2, 0x6c, len(ba)), i2c_addr)
    i2c.send(ba, i2c_addr)

def dotgraph(ba, off=0):
    i2c.send(pack('<BBB', 2, 0x6d, len(ba)), i2c_addr)
    if off:
        i2c.send(ba[off:], i2c_addr)
        i2c.send(ba[:off], i2c_addr)
    else:
        i2c.send(ba, i2c_addr)

def sysres_cmd():
    return b'\x02Y\xef\xbe\xad\xde'

def sysres():
    i2c.send(sysres_cmd(), i2c_addr)

def erase():
    i2c.send(pack('<BB', 2, 0x45), i2c_addr)

pulse = [10, 20, 30, 40, 60, 80, 90, 92, 90, 85, 82, 80, 81, 82, 84, 85, 84, 80, 75, 65, 55, 45, 40, 35, 30, 25, 20, 18, 17, 15 ]

def rndfill(ba, w=128, h=96):
    for i in range(len(ba)//2):
        ba[i*2] = pyb.rng() % w
        ba[i*2+1] = pyb.rng() % h

def lloop(ba):
    while True:
        #t0 = pyb.millis()
        erase()
        rndfill(ba)
        #polyline(ba)
        polydot(ba)
        oflush_oled(len(ba)+5)
        #print(pyb.elapsed_millis(t0))

def gloop(ba, dt=10):
    for i in range(len(ba)):
        if i < len(pulse):
            ba[i] = 100-pulse[i]
        else:
            ba[i] = 90
    da = bytearray(len(ba))
    for i in range(1, len(da)):
        da[i] = 48 + ba[i] - ba[i-1] 
    da[0] = 48
    #rndfill(ba, 96, 96)
    i = 0
    while True:
        #t0 = pyb.millis()
        erase()
        #polyline(ba)
        #ba[i]=50
        i2c.send(pack('<BBHH', 2, 0x50, 0x0010, 0x0), i2c_addr)
        dotgraph(ba, i)
        i2c.send(pack('<BBHH', 2, 0x50, 0x0410, 0x0), i2c_addr)
        dotgraph(da, i)
        #ba[i]=10
        i = (i+1) % len(ba)
        #oflush_oled(len(ba)+5)
        oflush_oled()
        #print(pyb.elapsed_millis(t0))
        pyb.delay(dt)

'''

def flood(s):
    cnt = 0
    while True:
        n = i2c.writeto(98, s)
        cnt += 1
        if n != len(s):
            pyb.delay(1000)
            m = i2c.writeto(98, s[n:])
            if m != len(s)-n:
                print('ERR ', n, m)
            else:
                print(cnt)

import ymain

from x import hexb
i2c = pyb.I2C(1, pyb.I2C.MASTER)
spi = pyb.SPI(2, pyb.SPI.MASTER, baudrate=5250000*2, polarity=0, phase=0, crc=None)
y4 = pyb.Pin('Y4', mode=pyb.Pin.OUT_PP)
y4.value(1)
i2c.recv(100,98)

i2c_addr = 98
y4 = pyb.Pin('Y4', mode=pyb.Pin.IN)

from struct import pack

def oled_setorient(o=4):
    i2c.send(b'A', i2c_addr)
    i2c.send(pack('<BBB', 2, 0x14, o), i2c_addr)

def getview(i2c):
    while i2c.recv(10, i2c_addr)[0]: pass
    i2c.send(b'\x02g0', i2c_addr)
    pyb.delay(10)
    res = i2c.recv(5, i2c_addr)
    if res[0] == 4:
        return res[1], res[2]
    else:
        return

def pwtest(dt=1000, orient=0):
    i2c = pyb.I2C(1, pyb.I2C.MASTER)
    y4 = pyb.Pin('Y4', mode=pyb.Pin.OUT_PP, value=1)
    pyb.udelay(dt)
    oled_setorient((orient & 3)+4)
    return getview(i2c)

def psend(s):
    i2c.send(s, 98)
    return len(s)

pcnt = 0

def psend(s):
    global pcnt
    pcnt += 1
    n = len(s)
    i = 0
    while i < n:
        try:
            i2c.send(s[i], 98, timeout=100)
        except OSError as e:
            print('%d %d %s' % (pcnt, i, e))
            if i:
                i -= 1
            break
        else:
            i += 1
    return i

def lpsend(dt=10):
    i = 0
    s = 'LINE: %d\r\n' % (i)
    while True:
        n = psend(s)
        if n >= len(s):
            i += 1
            s = 'LINE: %d\r\n' % (i)
        else:
            pyb.delay(dt)    
            s = s[n:]

for i in range(0, 0x8100, 128): dec(i, 0)

i2c.send(b'\x02F\x00\x00', 98);i2c.send('ABCDEFGabc"\'\r\n', 98)
i2c.send(b'\x02F\x10\x00', 98);i2c.send('ABCDEFGabcäÄ"\'\r\n', 98)
i2c.send(b'\x02F\x20\x00', 98);i2c.send('ABCDEFGabc\xc3\xa4"\'\r\n', 98)
i2c.send(b'\x02F\x30\x00', 98);i2c.send('ABCDEFGabc"\'\r\n', 98)

tpos = bytearray(3)

def callback(line):
    global tpos
    i2c.send(b'\x02T', 98)
    i2c.recv(tpos, 98)
    print(tpos[0], tpos[1], tpos[2])

extint = pyb.ExtInt(pyb.Pin('X11'), pyb.ExtInt.IRQ_FALLING, pyb.Pin.PULL_UP, callback)


from asmstuff import asm_fill
import uctypes

fba = bytearray(128*80*2-1)

def set_scroll_window(i2c, win, x=-1, y=0, w=0, h=0, dx=0, dy=0, fgc=0x07e0, bgc=0):
    b = bytearray(19)
    b[0] = 2;
    b[1] = 0x55;
    b[2] = win & 0xff;
    b[3] = x & 0xff;
    b[4] = (x >> 8) & 0xff;
    b[5] = y & 0xff;
    b[6] = (y >> 8) & 0xff;
    b[7] = w & 0xff;
    b[8] = (w >> 8) & 0xff;
    b[9] = h & 0xff;
    b[10] = (h >> 8) & 0xff;
    b[11] = dx & 0xff;
    b[12] = (dx >> 8) & 0xff;
    b[13] = dy & 0xff;
    b[14] = (dy >> 8) & 0xff;
    b[15] = fgc & 0xff;
    b[16] = (fgc >> 8) & 0xff;
    b[17] = bgc & 0xff;
    b[18] = (bgc >> 8) & 0xff;
    i2c.send(b, 98)

def d06_noise(i2c, spi):
    if pyb.rng(): pass
    set_scroll_window(i2c, 9, 0, 0, 127, 159, 0x8002, 0x0038, 0, 0)
    #i2c.send(b'\x02\x12', 98)
    i2c.send(b'\x02\x1c', 98)
    asm_fill(len(fba)//4,uctypes.addressof(fba),0x50060800)
    for i in range(10):
        fba[i*256+0] = 0x1f
        fba[i*256+1] = 0
    t0 = pyb.millis()
    spi.send(fba)
    #pyb.delay(100)
    #i2c.send(b'\x02\x1c', 98)
    spi.send(fba)
    return pyb.elapsed_millis(t0)

fb = bytearray(128)
fbi = 0

def rawseg(i2c, spi, o=0):
    global fbi
    set_scroll_window(i2c, 9, 0, 0, 127, 159, 0x8002, 0x0038, 0, 0)
    i2c.send(b'\x02\x12', 98)
    for i in range(len(fb)):
        #fb[i] = 0xff - (i & 0xff)
        fb[i] = ((i+o) & 0xff)
    fbi += 2
    if fbi >= len(fb):
        fbi = 0
    t0 = pyb.millis()
    for i in range(160*2):
        #i2c.send(b'\x02\x1c', 98)
        spi.send(fb)
    return pyb.elapsed_millis(t0)

def screendump(i2c, da, x=0, y=0):
    bc = bytearray(5)
    bc[0] = 2
    bc[1] = 0x10
    n = len(da)//2
    bc[2] = n
    bc[3] = x
    bc[4] = y
    i2c.send(bc, 98)
    while i2c.recv(1, 98)[0] < n*2:
        pyb.delay(1)
    i2c.recv(da, 98)


'''

def i2c_send(i2c, rba, a):
    for i in rba:
        print('0x%02x, ' % (i), end='')
    print()
    i2c.send(rba, 98)

def mlogo(i2c, x=10, y=10, c=0xffff):
    rba = bytearray(6)
    rba[0] = 2
    rba[1] = 0x50
    rba[2] = c & 0xff
    rba[3] = (c >> 8) & 0xff
    rba[4] = c & 0xff
    rba[5] = (c >> 8) & 0xff
    i2c_send(i2c, rba, 98)

    rba[1] = 0x72
    rba[2] = x
    rba[3] = y
    rba[4] = 14
    rba[5] = 68
    i2c_send(i2c, rba, 98)

    rba[2] = x+15
    rba[3] = y
    rba[4] = 2
    rba[5] = 14
    i2c_send(i2c, rba, 98)

    rba[2] = x+18
    rba[3] = y
    rba[4] = 14
    rba[5] = 68
    i2c_send(i2c, rba, 98)

    rba[2] = x+15+3+15
    rba[3] = y+69-15
    rba[4] = 2
    rba[5] = 14
    i2c_send(i2c, rba, 98)

    rba[2] = x+2*15+6
    rba[3] = y
    rba[4] = 14
    rba[5] = 68
    i2c_send(i2c, rba, 98)

    rba[2] = x+3*15+6
    rba[3] = y
    rba[4] = 2
    rba[5] = 14
    i2c_send(i2c, rba, 98)

    rba[2] = x+3*15+9
    rba[3] = y
    rba[4] = 14
    rba[5] = 68
    i2c_send(i2c, rba, 98)

    rba[0] = 2
    rba[1] = 0x50
    rba[2] = 0x0
    rba[3] = 0x0
    rba[4] = 0x0
    rba[5] = 0x0
    i2c_send(i2c, rba, 98)

    rba[1] = 0x72
    rba[2] = x+3*15+9+6
    rba[3] = y+56
    rba[4] = 3
    rba[5] = 6
    i2c_send(i2c, rba, 98)

def ow(i2c, i=3):
    ba = bytearray(3)
    ba[0] = 2
    ba[1] = 0x40
    ba[2] = i & 0xff
    i2c.send(ba, 98)

def bri(i2c, i=16):
    ba = bytearray(3)
    ba[0] = 2
    ba[1] = 0x16
    ba[2] = i & 0x1f
    i2c.send(ba, 98)

def pump(i2c, dt=100):
    while True:
        for i in range(1,32):
            bri(i2c,i)
            pyb.delay(dt)
        for i in range(31):
            bri(i2c,30-i)
            pyb.delay(dt)

def rot(i2c, r=0):
    '''
    pyb.repl_uart(pyb.UART(6,115200))
    '''
    ba = bytearray(3)
    ba[0] = 2
    ba[1] = 0x08
    ba[2] = r & 0x3
    i2c.send(ba, 98)

def uartbaud(i2c, baud=115200):
    baud_arr = [ 1, 2, 4, 8, 16, 24, 48, 96, 192 ]
    for i in range(len(baud_arr)):
        if baud_arr[i]*2400 == baud:
            ba = bytearray(3)
            ba[0] = 2
            ba[1] = 0x18
            ba[2] = i+1
            i2c.send(ba, 98)

def dance(i2c, i=0):
    ba = bytearray(3)
    ba[0] = 2
    ba[1] = 0x19
    ba[2] = i & 0xff
    i2c.send(ba, 98)

def nvsave(i2c, fr=0):
    if fr:
        i2c.send(b'\x02fN', 98)
    else:
        i2c.send(b'\x02fn', 98)

def pixel(i2c, x=0, y=0, c=None):
    if c:
        ba = bytearray(6)
        ba[0] = 2
        ba[1] = 0x41
        ba[2] = x & 0xff
        ba[3] = y & 0xff
        ba[4] = c & 0xff
        ba[5] = (c >> 8) & 0xff
        i2c.send(ba, 98)
    else:
        ba = bytearray(4)
        ba[0] = 2
        ba[1] = 0x61
        ba[2] = x & 0xff
        ba[3] = y & 0xff
        i2c.send(ba, 98)

#@micropython.native
def pixar(i2c, x=0, y=0, w=10, h=10, inc=1):
    c = -1
    ba = bytearray(6)
    ba[0] = 2
    ba[1] = 0x41
    for i in range(w):
        ba[2] = (i+x) & 0xff
        for j in range(h):
            c += inc
            ba[3] = (j+y) & 0xff
            ba[4] = c & 0xff
            ba[5] = (c >> 8) & 0xff
            i2c.send(ba, 98)

            pixel(i2c, i+x, j+y, c)

def touch(i2c, mode=0):
    ba = bytearray(4)
    ba[0] = 2
    ba[1] = 0x7a
    ba[2] = mode & 0xff
    ba[3] = (mode >> 8) & 0xff
    i2c.send(ba, 98)

def set_scroll_window(i2c, win=100, x=0, y=0, w=128, h=160, dx=0, dy=0, fgc=0x07e0, bgc=0):
    b = bytearray(19)
    b[0] = 2;
    b[1] = 0x55;
    b[2] = win & 0xff;
    b[3] = x & 0xff;
    b[4] = (x >> 8) & 0xff;
    b[5] = y & 0xff;
    b[6] = (y >> 8) & 0xff;
    b[7] = w & 0xff;
    b[8] = (w >> 8) & 0xff;
    b[9] = h & 0xff;
    b[10] = (h >> 8) & 0xff;
    b[11] = dx & 0xff;
    b[12] = (dx >> 8) & 0xff;
    b[13] = dy & 0xff;
    b[14] = (dy >> 8) & 0xff;
    b[15] = fgc & 0xff;
    b[16] = (fgc >> 8) & 0xff;
    b[17] = bgc & 0xff;
    b[18] = (bgc >> 8) & 0xff;
    i2c.send(b, 98)

sw=pyb.Switch()

def init_ports(connect='YX'):
    global i2c
    global y4
    global spi
    global uart
    if connect == 'YX':
        i2c=pyb.I2C(1,mode=pyb.I2C.MASTER)
        y4=pyb.Pin('Y4',mode=pyb.Pin.OUT_PP)
        spi = pyb.SPI(2, pyb.SPI.MASTER, baudrate=5250000*2, polarity=0, phase=0, crc=0x7)
        uart = 6
    elif connect == 'X':
        i2c=pyb.I2C(1,mode=pyb.I2C.MASTER)
        y4=pyb.Pin('X4',mode=pyb.Pin.OUT_PP)
        spi = pyb.SPI(1, pyb.SPI.MASTER, baudrate=5250000*2, polarity=0, phase=0, crc=0x7)
        uart = 4
    elif connect == 'XY':
        i2c=pyb.I2C(2,mode=pyb.I2C.MASTER)
        y4=pyb.Pin('X4',mode=pyb.Pin.OUT_PP)
        spi = pyb.SPI(1, pyb.SPI.MASTER, baudrate=5250000*2, polarity=0, phase=0, crc=0x7)
        uart = 4
    elif connect == 'Y':
        i2c=pyb.I2C(2,mode=pyb.I2C.MASTER)
        y4=pyb.Pin('Y4',mode=pyb.Pin.OUT_PP)
        spi = pyb.SPI(2, pyb.SPI.MASTER, baudrate=5250000*2, polarity=0, phase=0, crc=0x7)
        uart = 6

def usbuart(u=6, baud=115200, s=1):
    con=pyb.USB_VCP()
    uart=pyb.UART(u)
    uart.init(baudrate=baud, timeout=1, stop=s)
    while True:
        n = uart.any()
        if n > 0:
            ch = uart.read(n)
            con.write(ch)
        n = con.any()
        if n > 0:
            ch = con.read(n)
            for i in range(len(ch)):
                #print('<%02x>' % ch[i], end='')
                if ch[i] == 24:
                    return
                if ch[i] == 25:
                    #ch[i] = b'\x03'
                    uart.write(b'\x03')
                else:
                    uart.write(ch)
                    if ch[i] == 0x0d:
                        pyb.delay(1)
                        uart.write(chr(10))

def cmdI(i2c, a=0, b=0, c=0):
    ba = bytearray(6)
    ba[0] = 2
    ba[1] = 0x49
    ba[2] = a & 0xff
    ba[3] = b & 0xff
    ba[4] = (b >> 8) & 0xff
    ba[5] = c & 0xff
    i2c.send(ba, 98)

def topbot(i2c, a=0):
    ba = bytearray(3)
    ba[0] = 2
    ba[1] = 0x14
    ba[2] = a & 0xff
    i2c.send(ba, 98)

def alldown():
    par = []
    for x in ('Y1', 'Y2', 'Y3', 'Y5', 'Y6', 'Y7', 'X11', 'X12'):
        #par.append(pyb.Pin(x ,mode=pyb.Pin.IN, pull=pyb.Pin.PULL_DOWN, af=0))
        par.append(pyb.Pin(x ,mode=pyb.Pin.OUT_PP, pull=pyb.Pin.PULL_DOWN, af=0))
    for x in ('Y8', 'X9', 'X10'):
        par.append(pyb.Pin(x ,mode=pyb.Pin.OUT_PP, pull=pyb.Pin.PULL_DOWN, af=0))
    return par

def ppar(par):
    for x in par:
        print(x,x.value())

def maxdac(maxi2c, v=0):
    b = bytearray(4)
    b[0] = 2
    b[1] = 0x46
    b[2] = v & 0xff
    b[3] = (v >> 8) & 0x3
    try:
        maxi2c.send(b, 96)
        return True
    except:
        return False

def init(i2c):
    ba = bytearray(6)
    ba[0] = 2
    ba[1] = 0x49
    ba[2] = 0
    ba[3] = 0
    ba[4] = 0
    ba[5] = 0
    i2c.send(ba, 98)

def energy(i2c, l=(0, 0)):
    bc = bytearray(3)
    bc[0] = 2
    bc[1] = 0x0f
    bc[2] = 6
    i2c.send(bc, 98)
    while i2c.recv(1, 98)[0] < 6: pass
    ba = i2c.recv(7, 98)
    sum = 0
    for i in range(6, 0, -1):
        sum *= 256
        sum += ba[i]
    return (pyb.millis() - l[0], sum - l[1])

def ed(i2c):
    bc = bytearray(3)
    bc[0] = 2
    bc[1] = 0x0f
    bc[2] = 6
    i2c.send(bc, 98)
    while i2c.recv(1, 98)[0] < 6: pass
    ba = i2c.recv(7, 98)
    sum = 0
    for i in range(6, 0, -1):
        print('%02x ' % (ba[i]), end='')
        sum *= 256
        sum += ba[i]
    print(' RES: %d %08x %04x' % (ba[0], sum // 0x10000, sum & 0xffff))

def screendump(i2c, da, dt=128):
    bc = bytearray(5)
    bc[0] = 2
    bc[1] = 0x10
    bc[2] = 0x7f
    bc[3] = 0
    ba = bytearray(129)
    for i in range(95):
        bc[3] = 0
        bc[4] = i
        i2c.send(bc, 98)
        #pyb.udelay(dt)
        while i2c.recv(1, 98)[0] < 0x7f: pass
        i2c.recv(ba, 98)
        for j in range(128):
            da[i*256+j] = ba[j+1]
        bc[3] = 64
        i2c.send(bc, 98)
        while i2c.recv(1, 98)[0] < 0x7f: pass
        #pyb.udelay(dt)
        i2c.recv(ba, 98)
        for j in range(128):
            da[i*256+128+j] = ba[j+1]

def screenload(i2c, sa):
    b=bytearray(7)
    l=128*96*2+2
    b[0]=2
    b[1]=0x70
    b[2]=l & 0xff
    b[3]=(l >> 8) & 0xff
    b[4]=16
    b[5]=128
    b[6]=96
    i2c.send(b, 98)
    for i in range(96):
        i2c.send(sa[i*256:i*256+256], 98)

fbc_main="fbc_main"

d={}

d['x']='y'

'''
sw=pyb.Switch()
i=0
while sw:
    print(fbc_f(i))
    pyb.delay(1000)
    i+=1
    if i > 1:
        break

def play_jpg(j, x=0, y=0):
    zdmmx.oled.pos(0,0)
    for i in range(len(j.cindex)-1):
        print(i)
        ba=zdmmx.cjext(j.img, j.cindex, i)
        print(len(ba))
        zdmmx.i2cout(ba)
        pyb.delay(64)

fby=bytearray(15000)

from main import dia, i2cout
import mpy_logo

h=uhashlib.sha256(st.img[0])
ubinascii.hexlify(h.digest())

print(s1, s2)

img=[]
img.append(b'\xff\xd8\xff\xe0\x00\x10JFIF\x00\x01\x01\x01\x00\x01\x00\x01\x00\x00\xff\xdb\x00C\x00\x0a\x07\x07\x08\x07\x06\x0a\x08\x08\x08\x0b\x0a\x0a\x0b\x0e\x18\x10\x0e\x0d\x0d\x0e\x1d\x15\x16\x11\x18#\x1f%$"\x1f"!&+7/&)4)!"0A149;>>>%.DIC<H7=>;\xff\xdb\x00C\x01\x0a\x0b\x0b\x0e\x0d\x0e\x1c\x10\x10\x1c;("(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\xff\xc0\x00\x11\x08\x000\x000\x03\x01!\x00\x02\x11\x01\x03\x11\x01\xff\xc4\x00\x1a\x00\x00\x03\x00\x03\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\x06\x01\x03\x04\x07\xff\xc4\x00)\x10\x00\x00\x06\x00\x04\x06\x02\x03\x01\x00\x00\x00\x00\x00\x00\x00\x00\x01\x02\x03\x04\x05\x06\x116u!17At\xb2\x07\xb1\x13\x17\xa1\xc1\xff\xc4\x00\x14\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xc4\x00\x14\x11\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xda\x00\x0c\x03\x01\x00\x02\x11\x03\x11\x00?\x00\xf1\x90\x00y\x825\xd5\x16\xe0\xcf\xb9\x03\x1b\xeb\x8b\xbf9\xdfc\x00\x8c\x00\x01K>\x8e\x0c\x7f\x8e\xea\xae\x9bB\xcad\xa9\x8e\xb4\xe2\x8d\\\x0d)\xe5\xc0\x076\x08\xd7T[\x83>\xe4\x0co\xae.\xfc\xe7}\x8c\x07T\x0a82>:\xb4\xbbq\x0b9\x91\xa6\xb4\xcbj%\x1eD\x95\x17\x1e\x02d\x00-m\xba;C\xb8\xc8\x00\x9b\x04k\xaa-\xc1\x9fr\x067\xd7\x17~s\xbe\xc6\x01\xd5WG/7&>\x84H\x00Z\xdbtv\x87q\x90\x016\x08\xd7T[\x83>\xe4\x0co\xae.\xfc\xe7}\x8c\x03\xaa\xae\x8e^nL}\x08\x90\x00\xb5\xb6\xe8\xed\x0e\xe3 \x04\xee\x19\x9e\xc5^(\xab\xb0\x94j&#Km\xd7\x0d%\x99\x92R\xa23\xe03\x89\xe7\xb1i\x89\xec\xe7\xc55)\x892\x9cq\xb3Rr3I\xa8\xcc\xb3.\xc0(j\x8c\xbfO^\x97r\xb2\x8e\x7f\xc1"\xec\x09\x8cEj[\xb1\x1en;\xd9\xfe\x27V\xd9\x92\x17\x97<\x8f\x91\x80\xd0-m\xba;C\xb8\xc8\x01\x14\x00\x16\x95=!\xbe\xdcc\xff\x00\xa1e\xb6-r\xd7\x08\xd4\xe1\xf5DKh\xac5\x1a^%\x99\x9b\x99\xe7\xdb\xb70\x1f\xff\xd9')
img.append(b'\xff\xd8\xff\xe0\x00\x10JFIF\x00\x01\x01\x01\x00\x01\x00\x01\x00\x00\xff\xdb\x00C\x00\x0a\x07\x07\x08\x07\x06\x0a\x08\x08\x08\x0b\x0a\x0a\x0b\x0e\x18\x10\x0e\x0d\x0d\x0e\x1d\x15\x16\x11\x18#\x1f%$"\x1f"!&+7/&)4)!"0A149;>>>%.DIC<H7=>;\xff\xdb\x00C\x01\x0a\x0b\x0b\x0e\x0d\x0e\x1c\x10\x10\x1c;("(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\xff\xc0\x00\x11\x08\x00`\x00\x80\x03\x01!\x00\x02\x11\x01\x03\x11\x01\xff\xc4\x00\x1b\x00\x01\x00\x03\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x06\x07\x05\x03\x02\x01\xff\xc4\x00B\x10\x00\x01\x03\x03\x01\x04\x06\x04\x0b\x06\x07\x01\x00\x00\x00\x00\x01\x00\x02\x03\x04\x05\x11\x06\x07\x12!1\x1367At\xb3\x16Q\x94\xb1\x14"#4Uqsu\x83\xb2\xd123Va\xa1\xd2\x15BRr\x81\x91\xa2\xc1\xff\xc4\x00\x14\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xc4\x00\x14\x11\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xda\x00\x0c\x03\x01\x00\x02\x11\x03\x11\x00?\x00\xd9\x91\x01\x10B\xac\xbcZ\xed\xd2\xb6*\xeb\x95%,\x8en\xf0d\xf3\xb5\x84\x8f^\x09\xe4\xa3\xfaQ\xa7\xbe\x9e\xb6\xfb\\\x7f\xaa\x07\xa5\x1a{\xe9\xebo\xb5\xc7\xfa\xafH5\x0d\x92\xa6fAOy\xa0\x96Y\x0e\x19\x1cu,s\x9c}@\x03\xc5\x07\xe4\xba\x8e\xc5\x04\xcf\x86k\xd5\xbe9#qk\xd8\xfa\xa6\x074\x8e`\x82x\x15\xf1\xe9F\x9e\xfaz\xdb\xedq\xfe\xa8\x1e\x94i\xef\xa7\xad\xbe\xd7\x1f\xea\xa4\xd1\xdd\xed\x97\x17\xb9\x947\x1aJ\xa7\xb0e\xcd\x82v\xbc\x81\xeb8(&"\x02 "\x02 \xc0\xf6\xf9\xd6\xfa\x0f\x00\xdf1\xeb/@V=\x9ev\x83d\xf1lA\x1f[u\xe6\xfb\xf7\x8c\xfea\\D\x05\xabl\x07\xac7O\x08\xdf\xce\x10n\xc8\x80\x88\x08\x80\x880=\xbeu\xbe\x83\xc07\xccz\xcc\xa1\x8f\xa5\x9d\x91\xe7\x1b\xee\x0d\xcf\xab(:\xfa\xc3N\x8d)\xa9\xea\xec\xa2\xa8\xd5\x0am\xcf\x951\xeeoo1\xae\xe5\x93\x8f\xda\xc7>\xe5\x27g\x9d\xa0\xd9<[\x10G\xd6\xddy\xbe\xfd\xe3?\x98W\xae\x88\xd2\xc3Xj6Z\x1dXi\x03\xe3{\xfaQ\x1e\xff\x00\xec\x8eX\xc8\xf7\xa0\xe08n\xb8\x8fQZ\xae\xc0z\xc3u\xf0\x8d\xfc\xe1\x06\xec\x88\x08\x80\x88\x08\x83\x03\xdb\xe7[\xe8<\x03|\xc7\xac\xd6\x8f\xe7\xb0}\xa3}\xe8-\xdb_\xed6\xeb\xf8>K\x17;g\x9d\xa0\xd9<[\x10G\xd6\xddy\xbe\xfd\xe3?\x98U\x93b\x9d\xa2C\xe1\xa5\xf7 \xa0\xc9\xfb\xc7}kU\xd8\x0fXn\xbe\x11\xbf\x9c \xdd\x91\x01\x10\x11\x01\x10`{|\xeb}\x07\x80o\x98\xf5\x9a\xd1\xfc\xf6\x0f\xb4o\xbd\x05\xbbk\xfd\xa6\xdd\x7f\x07\xc9b\xe7l\xf3\xb4\x1b\x27\x8bb\x08\xfa\xdb\xaf7\xdf\xbcg\xf3\x0a\xb2lS\xb4H|4\xbe\xe4\x14\x19?x\xef\xadj\xbb\x01\xeb\x0d\xd7\xc27\xf3\x84\x1b\xb2 "\x02 "\x0c\x0fo\x9do\xa0\xf0\x0d\xf3\x1e\xb3Z?\x9e\xc1\xf6\x8d\xf7\xa0\xb7m\x7f\xb4\xdb\xaf\xe0\xf9,\\\xed\x9ev\x83d\xf1lA\x1f[u\xe6\xfb\xf7\x8c\xfeaVM\x8av\x89\x0f\x86\x97\xdc\x82\x83\x27\xef\x1d\xf5\xadW`=a\xba\xf8F\xfep\x83vD\x04@D\x04A\x81\xed\xf3\xad\xf4\x1e\x01\xbec\xd6kG\xf3\xd8>\xd1\xbe\xf4\x16\xed\xaf\xf6\x9bu\xfc\x1f%\x8a\xbd\xa6\xee\xed\xb0\xea:\x0b\xab\xe136\x92a!\x8c;t\xbb\x1d\xd9A\xe5}\xb8\xb6\xf1\x7f\xb8\\\xdb\x11\x89\xb5\x952N\x18NKw\x9cN3\xff\x00*\xdd\xb1w\xee\xed\x1a\x98c;\xf0J>\xaf\x8b\x9f\xfe \xabY\xf4\xfd\xd7R\\d\xa2\xb4R\x1a\xa9\xd8\xc3#\x98\x1e\xd6\xe1\xa0\x80N\\@\xe6G\xfd\xad\x17`\xb1\xba-Kw\x8d\xe3\x0ee(k\x87\xa8\x87\x84\x1b\xa2 "\x02 "\x0c\x0fo\x9do\xa0\xf0\x0d\xf3\x1e\xb3Z?\x9e\xc1\xf6\x8d\xf7\xa0\xb7m\x7f\xb4\xdb\xaf\xe0\xf9,T\xb4\x05z\xd8\xd7i\x14_e7\xe4(9z#X\xbbD\xdf\xea.m\xa1\x15\xa6ZwA\xd1\x99z<e\xcdvs\x83\xfe\x9f\xea\xae\x9b\x09\x97\xa7\xd5W\x99\xb7wzJ}\xecg\x96_\x94\x1b\x92 "\x02 "\x08\x15\xf6+=\xd2f\xcdq\xb4\xd1VH\xd6\xee\xb5\xf5\x14\xec\x91\xc0s\xc0$\x1e\x1cJ\x8c4\x86\x99k\x83\x9b\xa7m@\x8e \x8a(\xf8\x7f\xe5\x07\xb5^\x9b\xb1\\*_S[e\xb7\xd4\xce\xfcoK5+\x1e\xe7``d\x91\x93\xc0\x00\xbc=\x0f\xd2\xff\x00\xc3v\x9fa\x8b\xfbP=\x0f\xd2\xff\x00\xc3v\x9fa\x8b\xfbW\xbd\x1e\x9d\xb1\xdb\xaaEM\x0d\x9a\xdfK;A\x02X)X\xc7\x00y\xf1\x03(<}\x0f\xd3\x07\x9e\x9c\xb4\xfb\x14\x7f\xda\xa5PX\xed\x16\xa9\x1d%\xba\xd7EF\xf7\x8d\xd7:\x9e\x9d\x91\x97\x0fQ \x0c\xa0\x9c\x88\x08\x80\x88\x08\x82=\x0d\xc2\x8e\xe7J\xda\xaa\x0a\xb8j\xa0q K\x0c\x81\xed$\x1c\x1e!H@D\x04A\xe2+)]V\xea1S\x11\xa9kw\xcc!\xe3|7\xd7\xbb\xcf\x1cG\x15\xec\x80\x88\x08\x80\x881\xed\xa4:\xe1I\xb5\x1a[\xc5\xb7.\x9e\xcfhek\xa3\x07\x1d$m\x99\xe2F\xe7\xb8n9\xd9\xfe@\xa8\x02\xed>\xa7\xda\xbd\x8bQ\xb7x[g\xac\x92\x92\x81\xafi\x05\xcc\x89\xa0\xb9\xff\x00Qt\x87\xfa\x8e\xe4\x1e\xbaWW\xdf\xabhl\x1an\xc6-\xd6\xda\xab\x87O4\x95\x02\x99\xa1\x8ck\\\xee\x0d`\xe1\x9f\x88\xec\xf0\xf5r\xe2\xbb\xd7K\xf6\xbc\xa2\xd4\x16-<\xca\xbbK\xee\x15\xf1M\xd2H\xd8\xdd\xd1|]\xec;\x8f\x1c\x803\x81\xc3#\x1c\x90D\x1a\xb7[\xd7P^\xae\xd4u\xd6\xc8i\xf4\xfb\xcc2\xc1,$\xba\xa9\xd1\x8f\x94q<\x0bs\xc4\x801\xcf\x1c\xc6Mb\xb6\xe3\xa7\xef\xbbC\x9e\xe7\xa9-5uT\xb5\x96\xa8&e5.\xfb\x9e\xc9\\\xc8\x88\xfd\x92\x09\x00\x17\x0c\x9e\x1cG\x04\x1d\xdd+x\xd4\xdaB\x86\xc2\xfb\xc3\xa6\x86\xc7]_-(\x8e\xb1\xa0K\x03\x08\x1d\x11s\x8f\x103\xbcx\xf0\xc3}D(w\xfb\xfe\xa8\xbfi\xfb]\xecV\xc7OEY\x7f\xe8\xe8b\xe8\xf7\\\x18\x0b\x84e\xc5\xa7\x88\xc8x \xf3\xc0A>H5c\xf6\xb5W\x05\xb6\xb2\xdc\xcb\xb1\xb34OS$n\x11\x01\xbc\xc3\x96\xb7\x8f\x1c\xee\x8e9\xe0I\xf5%\x9bh\xfa\x9fSCc\xb3P\xba\x92\x92\xe7^\xe9\x84\xf5\xb2G\xbc\xd0\xd8\xf2r\xd6r\xde \x1c\x8e\\\xb9g\x80|Um#U\xd2\xd3Om&\x8eK\xad\xbe\xf3\x0d\x0b\xe6c>N\xa1\xaf\x12p#\xfc\xa71\xf1#\x1c\x0f!\x85e\xd2\x9a\x83S\x0d{q\xd2\xfa\x86z:\xa3\x15 \xab\x8eZh\xf7\x03x\xb4n\x8fX\xf8\xfd\xfcx\x7f4\x17\xd4@D\x1c\xb9\xb4\xed\xba\xa3P\x7f\x8d\xcd\x1b\x9fTh\xcd\x11\x0e9c\xa2.. \xb7\xbf\x89*1\xd1\xd6A=\xa2Hi~\x0e,\xce{\xa9#\x85\xdb\xaci~7\xb2;\xf8\x8c\xa0\xe7\x1d\x98i\x87Y\xe9m\x86\x9a}\xca7\xb9\xf4\xf3\x09\x8be\x8c\xb8\xe4\xe1\xc3\xbb=\xcaM\xb7@i\xfbMu\xb6\xb2\x86\x9aH\xa4\xb66A\x07\xca\x92\x09x!\xc5\xd9\xe6NJ\x0f\x0b\x9e\xcc\xf4\xb5\xda\xe55}E\x14\xad}K\x83\xeac\x86w\xc7\x1c\xee\x1d\xeeh<\xf3\xc7\x868\xe4\xf3+\xa5C\xa4\xad\x16\xddC-\xf2\x92\x17EU%3iwZ\xecF\xd8\xdb\xba\x00\x0d\xe40\x18\xd4\x1c]\xa2X\xb5\x16\xa8\xa1m\x92\xdb\x0d\xb4[\xea\x03L\xf5\x15\x0fwK\x13\x9a\xf0r\xd0\x061\x81\x8e\xf2rG\x0e\xfe\x9dv\x88\xb2\xdc\xb4\xb5&\x9d\xab\x85\xef\xa4\xa3k\x04.k\xb7\x1e\xd75\xb8\x0e\xc8\xef\xe2s\xf5\x94\x1fv\x9d\x1bi\xb2\xdd\x9bt\xa4\x15\x06\xa4R\x0a=\xe9f/\xcc`\x83\xc7=\xf9h\\\xe1\xb2\xfd.-\x10\xdb~\x0b6\xe5<\xce\x9e\x09\x84\xee\x12\xc4\xf7c$8\x7f\xb4p\xfeH=\xa3\xd9\xc6\x9a\x86\xdbOA\x0d,\x91\xc7\x05[k7\x84\xa4\xbeIZ\x08\x05\xce9\x27\x99\xe1\xc9u"\xd3\x96\xf8u<\xda\x8d\x8d\x93\xe1\xf3\xd3\x8aw\x92\xff\x00\x8b\xb9\x90yz\xfe(A\xd5D\x1f\xff\xd9')
img.append(b'\xff\xd8\xff\xe0\x00\x10JFIF\x00\x01\x01\x01\x00\x01\x00\x01\x00\x00\xff\xdb\x00C\x00\x08\x06\x06\x07\x06\x05\x08\x07\x07\x07\x09\x09\x08\x0a\x0c\x14\x0d\x0c\x0b\x0b\x0c\x19\x12\x13\x0f\x14\x1d\x1a\x1f\x1e\x1d\x1a\x1c\x1c $.\x27 ",#\x1c\x1c(7),01444\x1f\x279=82<.342\xff\xdb\x00C\x01\x09\x09\x09\x0c\x0b\x0c\x18\x0d\x0d\x182!\x1c!22222222222222222222222222222222222222222222222222\xff\xc0\x00\x11\x08\x00<\x00P\x03\x01!\x00\x02\x11\x01\x03\x11\x01\xff\xc4\x00\x1c\x00\x00\x01\x05\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\x01\x03\x04\x06\x07\x08\x02\x00\xff\xc4\x008\x10\x00\x02\x01\x02\x05\x02\x04\x03\x06\x03\x09\x00\x00\x00\x00\x00\x01\x02\x03\x04\x11\x00\x05\x12!1\x06A\x13"Qa\x14q\x81\x07\x152r\x91\xa1\xb1\xd1\xe13BCRd\x92\xb2\xc1\xf0\xff\xc4\x00\x1a\x01\x00\x03\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x03\x04\x05\x00\x01\x06\xff\xc4\x00\x27\x11\x00\x02\x03\x00\x01\x04\x01\x04\x02\x03\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03\x11\x04\x12!"1A\x05#Qa\x13\xf0q\xd1\xe1\xff\xda\x00\x0c\x03\x01\x00\x02\x11\x03\x11\x00?\x00-\x95D\xa8\xcb\xb5\xb1i\xa6p\x9dC\x97\xb7\xfaY\x87\xee\x98\xcbN\xcd7\xb9\x03S%\x9aJ\x8b\xa5\xbd\xb0\xb9(\x1e%K[rW\xfe\xf0\xfa\xce\xda$\x0e\xbd5\x19]\xcb\xc6\xbf\xb3\x1c\xd1Gx\xaaG\xecq\x91CL\xb1\x93\xfc\xb0|\x83\xdcOxC\xc4\xc4\x92\xeb8\x00~\xd8\x1bOL\x952\xb24\xa5$-e\x1an\x1b\x9e\xf7\x00\x1f\x9e:\x81\xee{\xc9>\xa3\xb3\xe5_\x0e\xa2F\x07i\x15|\xcc\xbf\xe6\x1d\x85\xfb{\xe3\xa6r\xdb}\xd9Kn<$\xff\x00\x88\xc3\xc0\xf2\x919\xed1\xec\xa2`i)\x8b\x1f3D\x8d\xb9\xfcW\x1f\xd3\x04s\x9a\xd9))\x9e\xaa\x27h\xe4\x86\x86\xa9\x91\x97\x90B\x02\x08\xfd1\x02\x8f,\x9bV\x9f\xb7\xbf\xe2g\x19_^\xf5\x0duj\xd3\x9c\xd6\xa1\x9a1\xa8\x97D;\xfbm\x8d\xef\xa2\xc5_\xdd\x1e5mCM,\xcc\x18\\(\xb2\xdbn\x00\xf9\xe2\xa5\xac\x06\xd12^\xd6d\xc3\x06d\xa3\xc5\xfb8\xcc\xe3\xeeEB\xe3.\x92\x89\xa2\x91\x81m\xc7\xad\xff\x00\x9e\x03\x90|\xc0\x94\xf0\xc7\xdb\x27\xf7 K\x19\xf8\x9b\x02\x9cw_\xeb\x86M)\x06\xf68\x7f\x15wbym\x99\x16:b\xd5\x11\x83{\x97]\xfe\xb8\xe9Z!\xa2\x86\x05=\xa3A\xfb\x0c:\xc1\x8d%\xddY\xce\xf4\xf5\xb36S\x97E\x0c\xa9\x1b,k\xad\xb5\xe9#\xca\x05\x8f\xa7s\xef\xf4\xc3\x12\xf5\x15}U5L\x15\x12\xc3 Dh\x7f\x05\xae\xae\x0a\xb5\xed\xbf\x1d\xf1\x10LrL\xd8{A\xa5T\x7f}AYt4t5\x9f\x13\x15\x1cz\xcd\x97y^\xc4\x7f\xbb\x1a\xcfO\xf5\xb6s%<k\x0eE\x1c\xb0\x03\xa4K\x19p\xbb\x0b\x91}\xc5\xf8\xc1\xf5\xf6\xdc\x93\x1a\x01\xecNA4\x1d~r\xdc\xb6\xaf&\xa5\xca\xde\xb6]nZE\x94*\xc6[\xb3\\[oLW\xb3\xcc\xda:x\xa3\xa9Z\xfaY\x04\xaeS\xca\x1fc\xf9J\x83o}\xff\x00q\x7f^\xb0\xed\xd4b\xab\xb1\xaaL\x1e\x8c\x0d\x15l\x92W\x14\x9e0\xa4\x8f+\xc6\x0b+\x8e\xc4\x1fO\xfcq`\x13\xd17w\x07\xdd/\xfc/\x87\xd2\xcbI\xf2\xf9\x81j\xb7!A_\x88\xa8h\xb5\xab\x09\xd1H \xf9\xd5\x97\xbf\xcb\x1a\xe5/Xt\xe9M#;\xa3\x04\x00<\xeeS\x80\x07p1\xed\xb6+\xb6\xacJ\xd2\xea\xb8D\xe7\xda\x8a\xc1\x92j\x92G\x99\xe6x\xc4\x0b\x12F\x87\xb1[\x06\x27\xf3ol\x04\xcb\xf3\xdaZ,\xc2\x03_\x97\x09a]*\xc1j-\xac)\xb8\xd4@7<^\xc3\x81\x85\x8d`H\x8e\xb4\x85!L\xbfF\xb9T\xae\x95\x19}L\xc2i_\xc9\xa6Xf\x0d}\x8d\x89K7o-\xc1\xdf\x81\x82\x8a\xb9\xddNC[C\x91I\x94]$h\x99\xe4\xa5h\x1f]\xecN\x90\xcd\x19&\xd6\xb9Q\x8ck9\xd6q[/\x1d\xbf#\xfb\xeaV\x13\xf9\x13P\xcc\xf2\xa2\xa2\xbf\xa6\x0cy~w\x97\xd6\xd2\xa2\xb6\xa5\xd2\xe1\x92S{\x93\xe8\xf7<\xf9\xaf\xbe!g]AG\x98$\xa4?\x88$}b0\x8d\x1f\x87\xb1\xe6\xf7\x1b\\\xf0N5jd\xb5E\x88t\x19\x1b\x12\x9e\x06;\x15d\x90e\xb1\xbdl\xc28\xea\x1f\xc5\x85\x8a\xd9\xbb\xea\xf2\x9f\xee\x92y\xe3\xcb\xeapN\x9e\xacMJ\xb5qV\xa7\x82X\xa0z\x98\x1e%\xd69]k\xa9o\xecH\xc3\x8a\x86\x18\xd1kc!\xd5\x85\x1eD\x8eO\x08TB\xc4\xa8u`\xfb0$\xdbK\x10\x03q\xc8\xef\xb5\xbb\xe0\xc5\x1d;\x1a$\x9c]\xb5\x8cO`\xe9\x96\xd5g_\xb9U\xcd\xe3\xfb\xc3$tZT\x9e\xadJ\xb2M\xfe!P|\xcb\xefpO\xbe\x04fu\x14\x159"A\x13C\xe3X$p\x80|@\xf7\xfcF\xe3\xca\x00\xb8\xc5U\x90\x01\x91\xdd\xd4H&\x01H$\xa1i\x13\xc4rX\\xM\xe5b/c\xbe\xcc1\x7f\xe8\x9e\xba\x14u1Pf\x933E#\x00\xb5\x0e4\x98\xf6\xb0\x0f\xed~\xe7\x8d\xbbc;\xea\x9cA\xc9\xe3\x90\x07\x90\xf5\xfe\xa3x\xb6\x9a\xac\xfd\x19\xa6TTey\xed\x03\xd2\xcaik\xa9\xa4\x1b\xc6\x188>\xe2\xdc\x1fq\xb8\xc6?\xd5\xbd\x0bQ\x97f\x90|\x10\xf1(\xa7\xf2F\xcc7W\xb1!\x1f\xe7\xc0=\xfb\xd8\xe3\x07\xe8\\\x87\xa2\xd3\xc7\xb0`oC\xf0\x7f\xec\xbb\x9bJ\xbau\xac\x87\xd2\xf9\x04\x99\xec\xae\xcf(C\xb0y\x1c\x02E\xf8\x1b\xf0\x00#\x1e\xf3Jz\x9e\x9f\xa9\xf8x\xa6Y)j\x941]>I\x806\xb3(6$X\xef\xe9\xc5\xb1\xf69\xa3f>\xf7\xd9_z\xd7\xa4\xf1(\x9eI\x0c)!*C\x1b~a\xe8}\xfe\x86\xf8\xbd\xf4\xff\x00W\xd0Q\xe4\xcb\x04\xb2T\xd4\x11\xcbx?\xd9\x9e\xe0\xd8\xf0}~{b{\xab.\xb8#\xe8\xb4#u\x19\x0f\xc61\xd3\x92\x9f\x8b\x81\x86\x0d$l\x86R\xb7\x94\x8b\xebcr}\x8e\x19X\xde\xe6\x0d\xad\xe8H\xf2e1\xd5"\x89\x12\xe4\x13\xdb\xb6\x10d4\xeaU\x1a\x0dB\xdb\x02N\x09\xc6\x0d\x80\xb8NI\x11\xf4\xb5\x0c\xb6\x11\x97\x86b\xd6\x0a\x09k\x1fr7\x1f\xa6#\xc9E\x99R\xdd!\xcdj\xd58\xb0\x98\xb2\x9bzoc\x84\x00\x8eq\x86\xc70(\xba\x27\xd9=Va\x90\xb3\x98\xa1\x8e\xaa\x27\x1a^7<\x8f\xe3\x7f|B\xcf+s,\xea\xb8N\xf4\xa2\x9d\x11t\xa4q\x1b\x05\x1fRO\xd7\x14\xefl\x93\x9e\xd0z\xe5\xd3J\xc5\xa6\x17\x27\xd4\xdb\x16\xfc\x97\xa7(jr\xf4\x12\xc4\xe85\xdd\xd8\x02Xp\x09\x17\xeflp\x10I\x89\x1a\xea\x16"\xf8#A\x97\x0a\x99\x95\x09\x0a\x09\xef\x80\x1d\xa3\x1b\xbc\xd4\xf2\x1e\x87\xcbM\x18\xf1Udw\x1e\x98\x07\xd4}\x14\xb9l\xc6xu\x08\xfb\x06\xdc`\xac\xf2N\x98\xb4\xf1}\x95\x87\xa5\x85\x8a\xa3\x03\xabpT\xfaX\xf7\xc7\x83G\x1a&\x85@\x16\xdcv\xfd0\x15\xa6\x08\xdb,\x88\x99]+\x9b\x11\xa0\x9fM\xc6\x14\xf4\xe4.\x7f\x11\xb7\xa8\xc3\x82\x899c\x15zn\x906\xfa\x8e\x0bS\xd0\xc7M\x08\x8d5\x15\xf4\x27\x05\xd3\x93\xcd2\x9d\x08\xe3\x06r\xf3i\x01\x1e\xb8J\xfb\x8f3c\xe8\xfa\x99\x1e\x8a\xccA\xb2\xed\x88\xddKY#\xb3\xc4B\xe9\xe3\x8c\x1f\xccW\xc4\xa8\xfd\xdfO#\xc7\xa9N\xe0\xf7\xc4\x1c\xc6\x82\x08\xc0+\xa8}p\xe0\x07LY\x27\xaa3O\x0a(\xbd\xaf\xf3\xc4\xe0\x83M\xed\xbf8\x118\xcfj\x07\x16\x18jc\xa5\x0d\xb1\xc6p\x9f\xff\xd9')
img.append(b'\xff\xd8\xff\xe0\x00\x10JFIF\x00\x01\x01\x01\x00\x01\x00\x01\x00\x00\xff\xdb\x00C\x00\x0a\x07\x07\x08\x07\x06\x0a\x08\x08\x08\x0b\x0a\x0a\x0b\x0e\x18\x10\x0e\x0d\x0d\x0e\x1d\x15\x16\x11\x18#\x1f%$"\x1f"!&+7/&)4)!"0A149;>>>%.DIC<H7=>;\xff\xdb\x00C\x01\x0a\x0b\x0b\x0e\x0d\x0e\x1c\x10\x10\x1c;("(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\xff\xc0\x00\x11\x08\x00`\x00\x80\x03\x01!\x00\x02\x11\x01\x03\x11\x01\xff\xc4\x00\x1b\x00\x01\x00\x03\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x06\x07\x05\x03\x02\x01\xff\xc4\x00B\x10\x00\x01\x03\x03\x01\x04\x06\x04\x0b\x06\x07\x01\x00\x00\x00\x00\x01\x00\x02\x03\x04\x05\x11\x06\x07\x12!1\x1367At\xb3\x16Q\x94\xb1\x14"#4Uqsu\x83\xb2\xd123Va\xa1\xd2\x15BRr\x81\x91\xa2\xc1\xff\xc4\x00\x14\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xc4\x00\x14\x11\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xda\x00\x0c\x03\x01\x00\x02\x11\x03\x11\x00?\x00\xc6Q\x01\x10L\xa3\xb3\xdd.1:Z\x1bm]Tmv\xe9|\x109\xe0\x1fV@\xe6\xa4z/\xa8~\x81\xb9{$\x9f\xa2\x07\xa2\xfa\x87\xe8\x1b\x97\xb2I\xfa/9\xf4\xf5\xee\x9a\x17\xcfQf\xaf\x8a(\xc6_$\x94\xcfkZ=d\x91\xc1\x07\xecZr\xfb<,\x9a\x1b-\xc2H\xe4hs\x1e\xcaW\x96\xb8\x1eD\x108\x85\xf7\xe8\xbe\xa1\xfa\x06\xe5\xec\x92~\x88\x1e\x8b\xea\x1f\xa0n^\xc9\x27\xe8\xa3VZ.v\xe65\xf5\xd6\xea\xbaV<\xe1\xae\x9e\x070\x13\xea\x19\x08""\x02 "\x02 \xde\xf6\x07\xd5\x0a\xff\x00\x1e\xef-\x8bQ@U\xbd\xa1\xf6}{\xf0\x8fA#D\xf5\x1a\xc5\xf7t\x1eX]\xc4\x05\x94m\xfb\xab\xd6\xbf\x16\xef\xc8PaH\x80\x88\x08\x80\x887\xbd\x81\xf5B\xbf\xc7\xbb\xcbb\xd3f\x93\xa2\x81\xf2c;\x8d.\xc7\xaf\x089\x1a?Q\x1dW\xa6)/F\x94R\x9a\x9d\xff\x00\x92\x12o\xee\xee\xbd\xcd\xe7\x81\x9f\xd9\xcf.\xf5\x1bh}\x9f^\xfc#\xd0H\xd1=F\xb1}\xdd\x07\x96\x17\x96\xb7\xd5\x27G\xe9\xc7\xdd\xdbF*\xcb$c:#&\xe7\xed\x1ey\xc1\xf7 \xb04\xef4\x1fXYN\xdf\xba\xbdj\xf1n\xfc\x85\x06\x14\x88\x08\x80\x88\x08\x83{\xd8\x1fT+\xfc{\xbc\xb6-.\xb3\xe6S\xfd\x9b\xbd\xc8*\x1b \xec\xca\xd5\xf8\xdes\xd7Gh}\x9f^\xfc#\xd0H\xd1=F\xb1}\xdd\x07\x96\x15sm}\x9d\xcd\xe2b\xf7\xa0\xbe\xc7\xfb\xb6\xfdK*\xdb\xf7W\xad^-\xdf\x90\xa0\xc2\x91\x01\x10\x11\x01\x10o{\x03\xea\x85\x7f\x8fw\x96\xc5\xa5\xd6|\xca\x7f\xb3w\xb9\x05Cd\x1d\x99Z\xbf\x1b\xcez\xe8\xed\x0f\xb3\xeb\xdf\x84z\x09\x1a\x27\xa8\xd6/\xbb\xa0\xf2\xc2\xaem\xaf\xb3\xb9\xbcL^\xf4\x17\xd8\xff\x00v\xdf\xa9e[~\xea\xf5\xab\xc5\xbb\xf2\x14\x18R "\x02 "\x0d\xef`}P\xaf\xf1\xee\xf2\xd8\xb4\xba\xcf\x99O\xf6n\xf7 \xa8l\x83\xb3+W\xe3y\xcf]\x1d\xa1\xf6}{\xf0\x8fA#D\xf5\x1a\xc5\xf7t\x1eXU\xcd\xb5\xf6w7\x89\x8b\xde\x82\xfb\x1f\xee\xdb\xf5,\xabo\xdd^\xb5x\xb7~B\x83\x0aD\x04@D\x04A\xbd\xec\x0f\xaa\x15\xfe=\xde[\x16\x97Y\xf3)\xfe\xcd\xde\xe4\x15\x0d\x90vej\xfco9\xea\xc5\xa9-\x0e\xbfi\xca\xfbS&\x10\xba\xae\x13\x18\x90\xb7x7=\xf8A\xe9b\xb7:\xcf`\xb7\xdb\x1d(\x95\xd4t\xd1\xc0^\x06\x03\xb7Z\x06q\xff\x00\x0a\xa3\xb6\x86ol\xe6\xa4\xe7\x1b\x93\xc4~\xbf\x8d\x8f\xfe\xa0\xb4\xde5\x05\xabM\xdb\xa3\xad\xbb\xd5\x8aX\x1e\xf1\x1b^X\xe7e\xc4\x12\x06\x1a\x09\xe4\x0f\xfd,\xeboR6]5h\x91\x87-}QsO\xac\x16\x14\x18b "\x02 "\x0d\xef`}P\xaf\xf1\xee\xf2\xd8\xb4\xba\xcf\x99O\xf6n\xf7 \xa8l\x83\xb3+W\xe3y\xcfWT\x05E\xdb/f\xf5\xbfk\x0f\xe7\x08:z\xdfG7[X)\xed\x8e\xae4B*\x86\xcf\xd2\x08\xbaL\xe1\xaen1\x91\xfe\xaf\xe8\xa9{v\x8b\xa0\xd2\xb6hw\xb7\xba:\x8d\xdc\xe3\x9e\x19\x84\x18r "\x02 "\x09\xd4\x17\xdb\xc5\xae\x17Cn\xbbV\xd1\xc6\xe7o9\x94\xf5\x0f\x8d\xa4\xf2\xc9\x00\x8e<\x02\x92u~\xa6sK]\xa8\xae\xa4\x1e\x04\x1a\xd98\xff\x00\xe9\x07\x95&\xa4\xbe\xdb\xe9\x9bMEz\xb8S@\xcc\xee\xc5\x0dS\xd8\xd6\xe4\xe4\xe0\x03\x81\xc4\x92\xbd\xbd0\xd5\x1f\xc4\x97on\x97\xfb\x90=0\xd5\x1f\xc4\x97on\x97\xfb\x97\x85f\xa2\xbe\\i\x8d5u\xe6\xe1U\x03\x88&)\xea\x9e\xf6\x929p\x27\x08=\xfd0\xd4\xe3\x96\xa3\xbb{l\x9f\xdc\xa2\xd7\xdf.\xf7X\xdb\x1d\xc6\xe9[X\xc6\x1d\xe6\xb6\xa2\xa1\xf2\x06\x9fX\x04\x9c \x82\x88\x08\x80\x88\x08\x82Eu\xbe\xb2\xd9T\xeaZ\xfaI\xa9gh\x04\xc54e\x8e\x00\x8c\x8e\x05G@D\x04A\xech\xea\x9bH\xda\xc3M(\xa6s\xb7\x04\xc5\x87p\xbb\xd5\xbd\xcb<\x0f\x05\xe2\x80\x88\x08\x80\x886\x0d\x9b\xb6\xdfW\xb2\xea\xab=\xcb\x0d\x82\xf1w}\x13d#=\x1c\x8e\x85\x867c\xbc\xef\xb5\xb8\xfed)\xe6\xd3\x06\x98\xd9E\xf7N;t\xdc\xa0\xa3\x8e\xae\xbd\xccp!\xaf\x95\xc45\x9fXlc\xfa\x1e\xf4\x1eZ\xabHXh\xab\xaf\xfa\x92\xf8n7*[\x7fA\x0ct\xe6\xa5\xc5\xefs\x9a\xde.y\xe3\x8f\x8e\xdcq\xf5\xf3\xe0\xb86\xbb\x0e\x83\xad\xd3\xf7\xddB\xfaK\xb3-\xf4\x12\xc3\xd1\xc6\xe9\x1b\xd2\xfcm\xdc\xb7\x87\x0c\x12q\x93\xc7\x07<\xd0K:KDP\xd7\xd9m5\x9479\xaa5\x03\x04\xd1O\x14\xc06\x95\xb2\x1f\x93h\x1cC\xb1\xc0\x12s\xcb<\x8e\x05\xa2\x8a\xdd\xa8,[<\x82\xd9\xa6\xee\xd4\x94\xb5TwY\xe1}MV\xe3X\xf8\x9a\xf9A\xfd\xa0@$\x86\x9c\x0e<\x0f\x14\x1c\x1dUg\xd3:\xbe\xba\xfc\xcb;a\x9a\xf9CA\x15Q\x92\x8d\xc4\xc5;\xc1=(kG\x02q\xba8q\xcb\xbd`\xa9\xb6\x0b\x06\x97\xb0\xea\x0b\xa5\x90\xd1IQ[G`\xe9+\xa5\xe97\x9a^CL\x81\xa1\xc3\x81\xc1a\x04r\xc9A\x029\xf4\x9b6KI=\xca\x8e\xe2\xfbH\xbc\xb8\xc1M\x1c\x8d2\x93\xba\xf1\x87;\x87\x0co\x1e\x18\xe2\x00\xf5\xaf\xcb\xce\xce4\xc6\x99\x9a\xf9y\xaem]]\xb2\x81\xb0\x98(\xa3\x93u\xc5\xd2`a\xcf\xe7\xba\x09\x18<\xf9\xf3\xc7\x10\xfb\xa5\xd9\xbe\x94\xaa\xa9\x82\xe4\x05dv\xab\x85\x9aj\xe6B\xf7\xfc\xa5;\x98c\xe2\x0f\xf9\x86$\xe0\x0ex\x8eg*\xb5\xaa\xf4\xfe\x99:\x0a\xdd\xaa4\xf4\x15\x94\xa2Z\xb3I$U2o\x97pq\xde>\xa3\xf1;\xb8q\xfeH(h\x80\x88:\x90\xea+\x8d>\x9f\xff\x00\x04\x86F\xb2\x94V\x0a\xd0Z0\xf6\xca\x1a\x1a\x08ww\x00\x14\x81\xacof\x0b\xbcsU| \xdeZ\xc6\xd5\xc93w\x9e\xe0\xcc\xee\xe0\xf7p8A\xd2\x1bO\xd4\xed\xbcU\\\xc5L\x1b\xf5\x8ck*!0\x87E h\xc0\xcbO~;\xd4[\x96\xbf\xd4\x17j\x1b\x95\x1duLr\xc7stf\x7f\x92\x00\x80\xc2\x0bCq\xc8\x0c\x04\x1e\xf6\xcd\xa6j\x9bM\xb6\x1a\x0az\xd8\x9c\xcaf\x96SI4\x0c\x92H\x1a{\x9a\xe29c\x87\x1c\xf0\xc0\xe4\x176\xbbV\xdd\xeeZz+\x1d\\\xcd\x96\x96:\x97Uo9\xb9\x91\xd2;x\x92]\xcc\xe4\xbd\xc8;[;\xbe\xe9\xdd/\\\xeb\xdd\xcak\x91\xb8S\x97\x08)\xe9\xd8\xde\x8aV\xb9\x84a\xc4\x9c\xe7\x27=\xc0`\x1e=\xdc\xca\x1doz\xb6\xea\x9a\xbdEI3\x19WX\xe7\x99\x9a\xe6\xef\xb1\xcds\xb2[\x83\xdd\xc0c\xea\x08>.\xda\xca\xedz\xb4\xba\xd7Vi\xc51\xab5\x9b\xb1B\x19\x89\x08#\x86;\xb0\xe2\xba\x27j\x1a\xa0\xdd\xe6\xb9|*\x1d\xfa\x88[\x04\xf0\x98\x1ab\x95\x8d\xce\x01i\xff\x00q\xe3\xfc\xd0x\xc9\xb4}K5\xca\xa2\xbej\xa8\xe4\x92zGQ\xee\x98\x80dq8\x82CZ0\x07!\xc7\x9a\xe5\xcb\xa8\xee\x13i\x88t\xe3\xdd\x1f\xc0 \xa85\x0c\x01\x9f\x1b\x7f\x04s\xf5|b\x83\x96\x88?\xff\xd9')
img.append(b'\xff\xd8\xff\xe0\x00\x10JFIF\x00\x01\x01\x01\x00\x01\x00\x01\x00\x00\xff\xdb\x00C\x00\x0a\x07\x07\x08\x07\x06\x0a\x08\x08\x08\x0b\x0a\x0a\x0b\x0e\x18\x10\x0e\x0d\x0d\x0e\x1d\x15\x16\x11\x18#\x1f%$"\x1f"!&+7/&)4)!"0A149;>>>%.DIC<H7=>;\xff\xdb\x00C\x01\x0a\x0b\x0b\x0e\x0d\x0e\x1c\x10\x10\x1c;("(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\xff\xc0\x00\x11\x08\x00Z\x00x\x03\x01!\x00\x02\x11\x01\x03\x11\x01\xff\xc4\x00\x1c\x00\x01\x01\x00\x03\x00\x03\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x06\x04\x05\x08\x02\x03\x07\x01\xff\xc4\x00=\x10\x00\x00\x05\x02\x03\x02\x08\x0c\x06\x03\x01\x00\x00\x00\x00\x00\x00\x01\x02\x03\x04\x05\x06\x07\x11\x12!1\x13"6AQtu\xb1\x14\x15\x16\x1747Va\x93\xb2\xb3\xc1Uq\x81\x91\x92\xd2\x27BR\xd1\xff\xc4\x00\x14\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xc4\x00\x14\x11\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xda\x00\x0c\x03\x01\x00\x02\x11\x03\x11\x00?\x00\xf8\xc8\x00\x00\x0d\xeb\x16=\xd3&;r\x18\xa0\xcdq\xa7RKB\xd2\xd1\x99(\x8fq\x90\xf6y\x01w{=?\xe1\x18\x07\x90\x17w\xb3\xd3\xfe\x11\x8cb\xb4\xae\x13\xaa*\x96Tyg5-p\xa6\xc7\x06z\xc9\x19\xe5\xab.\x80\x19>@]\xde\xcfO\xf8F\x1e@]\xde\xcfO\xf8F\x03\xd5&\xc9\xb9\xe1\xc6rL\x9a\x14\xd6\x99i&\xa5\xadM\x19\x12K\xa4\xc6\x8c\x00\x00\x00\x00\x00\x00\x80u\xad\xa5\xc9\x0a?Rk\xe4!\xb7\x00\x10Q\xfdz\xca\xecD\xfdB\x01z\x0047\xcf!\xeb=Q}\xc3\x94L\x00\x00\x00\x00\x00\x00\x80u\xad\xa5\xc9\x0a?Rk\xe4!\x81x\xd7\xa7Q%P\x1b\x87\xc1\xe9\xa8T\xdb\x8a\xf6\xb4\xe7\xc4Vy\xe5\xd0`)\x84\x14\x7f^\xd2\xbb\x11?P\x80^\x89K\x0a\xe2\x9fqF\xab9?\x82\xd5\x12\xa4\xecf\xb84\xe9\xe2$\x8b,\xfd\xfb@f\xdf<\x87\xac\xf5E\xf7\x0eQ0\x00\x00\x00\x00\x00\x02\x01\xd6\xb6\x97$(\xfdI\xaf\x90\x84\xf6$zu\xa5\xdb\xac}\xc0\\\x08(\xfe\xbd\xa5v"~\xa1\x00\xbd\x10\x18K\xe87\x0fm\xbf\xdc\x90\x147\xcf!\xeb=Q}\xc3\x94L\x00\x00\x00\x00\x00\x00\x80u\xad\xa5\xc9\x0a?Rk\xe4!=\x89\x1e\x9div\xeb\x1fp\x17\x02\x0a?\xafi]\x88\x9f\xa8@/D\x06\x12\xfa\x0d\xc3\xdbo\xf7$\x05\x0d\xf3\xc8z\xcfT_p\xe5\x13\x00\x00\x00\x00\x00\x00 \x1dkirB\x8f\xd4\x9a\xf9\x08ObG\xa7Z]\xba\xc7\xdc\x05\xc0\x82\x8e\x7f\xe7i]\x88\x9f\xa8@/D\x06\x12\xfa\x0d\xc3\xdbo\xf7$\x05\x0d\xf3\xc8z\xcfT_p\xe5\x13\x00\x00\x00\x00\x00\x00 \x1dkirB\x8f\xd4\x9a\xf9\x08ObG\xa7Z]\xba\xc7\xdc\x05\xc0\xc7(\x11\x0ay\xcf(\xcd\x14\xa5#\x837\xb4\x96\xb3N\xfc\xb3\xe8\x01\x90>{\x86\xee\x1czm\xd8\xe3dY\xb7Y\x94\xa4\x96[6$\x8c\x06\x1d2\xe7\xa8]\x98A[\xa8\xd4\xc9\xae\x18\x9by\xb2\xe0\x91\xa4\xb2$\x977\xea>\x02`\x00\x00\x00\x00\x00\x04\x03\xed\xd4Lm\xa0S(p 9N\xa8)\xc8\xd1\xd0\xd2\xcd)FFiI\x11\xe5\xc6\xdd\xb0j\xee\xbcY\xa2\xd7\xa4P\xdd\x8f\x06j\x0a\x9dRn[\xa4\xe1 \xb5!9\xe6E\x91\xef\x01C\xe7\xee\xdc\xfc6\xa5\xfcQ\xfd\x83\xcf\xdd\xbb\xf8eK\xf8\xa3\xfb\x00\xfd\xf3\xf7n~\x1bR\xfe(\xfe\xc2n\xce\xc5z-\xba\xdd]2\xa0\xcds\xc3\xeaN\xcbo\x83$\x1eHVY\x11\xe6e\xb7`\x0c\xfa\xf62[\xb5;n\xa1K\x8bL\x9c\xca\xe50\xa6\xd0f\x84\x12H\xcc\xb7\x9eJ\x1f\x18\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\xda`/%a\xfcea\x94+\x9a\x03\xef\xb9=dk\x91\x1c\xcc\x8c\x8d\xbdf\x8c\xd2DY\xec<\xbaw\x8d\xf2p\xbe\x9fI\x91m\xa5\xd6\x15S\x998\xdcL\xb8\x8eH\xe0\xda\xd4\x96\xcdFD\xa4\x96i\xd2\x7f\x9ey\x00\x94k\x0d\xabRigS\xd5\x0a"\x1d\xd6\xb8\xf1\xe4I$8\xea\x12{M$}\x05\xd2=\x87\x85W\x27\x83Ey\xb2\x8a\xe9\xccB\x14\xc3I|\xb5\xb9\xab~D\x7f\xf2[L\xf7\x11\x00\xc9\x8b\x85\xf3\x99\xadS\x1b\x9f!\x894\xd9r\x8a3\xd2 <K\xe0\x97\xb7\x8a{6\x1e\xce\x81\xb3\x97\x87\x96\xd5C\xc7P\xe8s*QgQVd\xea\xea:8\x072<\x8f%$\xb3/\xd7\xdd\xb0\x04\xc2p\xf6\xb5\xe3\x0a\xac\x27\x95\x1a:\xa9Z<!\xc7\\\xd2\xdf\x1c\xcbNJ\xcb\x9f1c\x17\x09\xe0\xc3\xbd\xbcU)\xe2\x9d\x11\xc8jq\xb4\x93\xe4\x97I\xc2N{H\xb7\x16{\x8c\x04\xb4\xcc/\xb9"\xae\x9e\x86\x9b\x8f0\xe7\xac\xdbA\xc6x\x96\x94,\xb6\x99(\xf7\x16Y\x1e\xdd\xdb\x07\xec\x9c0\xae0\xfc4\xb6\xfc\x19L\xcb\x92Q|";\xfa\xd0\xd3\xa7\xfe\xab\xc8\xb3 \x1e\x15\x9c4\xafP\xe8\xd2*\x92U\x11\xc6\xe2\xb9\xa2Cl\xbeK[[r#Q\x17Ne\xef\xda$@\x00\x00\x0bx\x0b\xeaV$"\x87\x16\xdd(\x91V\xf2\xe9\xb1\xdff[N\x1eHx\x96\xbdI\xcb\xf22#\xdb\xce2\xe9\x18\x99\x0d\x97(\xd2*LIvDI\x92\xe4JR2\xc9|*TE\xa7\xf2\xcc\xbf`\x18\xb3\xef;f\xe1\xa4\xc5M~\x935\xd9\xf4\xf6T\xccs\x8e\xf1!\xb7\x12g\xc5\xd5\xceYl\xdc<\xde\xc4\x98\xcd]4\x0a\xc4HN8\xdd6\x9c\x98o\xb2\xe2\xb2\xd7\xb1D\xa3I\xf3l=\x87\xee\x01\xef\x81~\xdb4\x03\x8b\x16\x87M\x9c\x88\xaa\x9e\x89\x92\xd7!\xc2R\xf8\xb9\xe4\x84\x16\xee}\xe65\x97\x15\xf7]\xbcjoR\xe3N6i\xd3$\xe4\xd3\x0b\xd0\xd1i5qu\xab\xdd\xb3y\x80\xdfbUs\xc1mZu\x11\xd7b;V\x92\x96\xd7Sr3\x9a\xc9D\xd9iFg\x9e\xf3\xde<\x0f\x11\xed\xc5\\\xcd\\%\x06{r\xdd\x80\xa8\xd2Q\xa9&\x82=$I\xd3\xfb\x00\xc0\xb5q%\x8b^\xdc\xa7Bj#\x8fH\x8d5n\xbcFdI[J,\x8c\x88\xf9\x95\xff\x00\x83"\x0d\xff\x00nPQ\x12\x0d\x0e\x9d9\x10\xd5PD\xd9\x8eHY-|]\xc8A\x16\xceb\xda\x03W\xe5\xa4\x1f\x12\xdd\xb0\x8d\x97\xcd\xca\xe4\x84\xba\xc2\x8f#$\x91/W\x1b\xf4\x11\x27\xbc\x00\x00\x00\x00\x00\x00\x00\x0bx\x01\x80\x00\x00\x00\x00\x00\xff\xd9')
img.append(b'\xff\xd8\xff\xe0\x00\x10JFIF\x00\x01\x01\x01\x00\x01\x00\x01\x00\x00\xff\xdb\x00C\x00\x0a\x07\x07\x08\x07\x06\x0a\x08\x08\x08\x0b\x0a\x0a\x0b\x0e\x18\x10\x0e\x0d\x0d\x0e\x1d\x15\x16\x11\x18#\x1f%$"\x1f"!&+7/&)4)!"0A149;>>>%.DIC<H7=>;\xff\xdb\x00C\x01\x0a\x0b\x0b\x0e\x0d\x0e\x1c\x10\x10\x1c;("(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\xff\xc0\x00\x11\x08\x00T\x00p\x03\x01!\x00\x02\x11\x01\x03\x11\x01\xff\xc4\x00\x1c\x00\x01\x00\x02\x03\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\x06\x03\x04\x08\x02\x01\x07\xff\xc4\x00?\x10\x00\x00\x05\x03\x01\x04\x05\x07\x0a\x06\x03\x00\x00\x00\x00\x00\x00\x01\x02\x03\x04\x05\x06\x11!\x1216t\x07\x13Q\xb1\xb3\x16\x17"A\x81\xb2\xd1\x147BUVaqu\x92\x94\x15#$2r\x91Tb\xc1\xff\xc4\x00\x14\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xc4\x00\x14\x11\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xda\x00\x0c\x03\x01\x00\x02\x11\x03\x11\x00?\x00\xfcd\x00\x06x0\xa4\xd4\xa6\xb3\x0a\x1bF\xf4\x87\xd6Hm\xb4\xefR\x8fq\x00\xb1\xf9\xb0\xbd~\xcf\xc8\xfdh\xf8\x87\x9b\x0b\xd7\xec\xfc\x8f\xd6\x8f\x88\x0c3:<\xbbi\xf0\x9e\x9b.\x88\xf3Q\xd8A\xad\xc5\x9a\x93\x84\xa4\xb7\x9e\xf1\xf6/G7|\xc8\x8c\xca\x8fC}\xc6_B\\md\xa4aI2\xc9\x1e\xfe\xc0\x19|\xd8^\xbfg\xe4~\xb4|C\xcd\x85\xeb\xf6~G\xebG\xc4\x05j\\G\xe0Kv$\xa6\xcd\xa7\xd9Y\xa1\xc4\x1e\xf4\xa8\xb7\x90\xc4\x00\x00\x00\x00,]\x1f\xf1\xf5\x13\x9do\xbc\x07U\x00\x0a\xf5\xfd\xc05\xceI\xce\xe1\xb1g\xf0e\x13\xf2\xf6<2\x012\x0096\xf3\xe3:\xc78\xe7\xbc!@\x00\x00\x00\x05\x87\xa3\xfe>\xa2s\xad\xf7\x80\xea\xb1T\xb6*3e\xdewdI\x12\\u\x88\x8f\xc7K\x0d\xa8\xf4l\x94\xd9\x99\xe3\xf10\x1bW\xf7\x00\xd79\x27;\x86\xc5\x9f\xc1\x94O\xcb\xd8\xf0\xc8\x04=\xc3T\x9d\x17\xa4\x9bZ\x03\x12\x9cn,\xb4\xc8\xeb\xd9I\xfa.l\xa3%\x9f\xc0\xc5\xc4\x07&\xde|gX\xe7\x1c\xf7\x84(\x00\x00\x00\x00\xb0\xf4\x7f\xc7\xd4Nu\xbe\xf0\x1dV)v\x87\x1f^\xbc\xc4o\x08\xc0I\xdf\xdc\x03\\\xe4\x9c\xee\x1b\x16\x7f\x06Q?/c\xc3 \x15\xcb\xa3\xe7b\xcd\xff\x00\x19^\x19\x8b\xe0\x0eM\xbc\xf8\xce\xb1\xce9\xef\x08P\x00\x00\x00\x01a\xe8\xff\x00\x8f\xa8\x9c\xeb}\xe0:\xacR\xed\x0e>\xbdy\x88\xde\x11\x80\x93\xbf\xb8\x06\xb9\xc99\xdc6,\xfe\x0c\xa2~^\xc7\x86@+\x97G\xce\xc5\x9b\xfe2\xbc3\x17\xc0\x1c\x9by\xf1\x9dc\x9cs\xde\x10\xa0\x00\x00\x00\x02\xc3\xd1\xff\x00\x1fQ9\xd6\xfb\xc0uX\xa5\xda\x1c}z\xf3\x11\xbc#\x019v\xd3\xe4\xd5\xad:\xa5>\x1a\x09r$\xc6[m\xa4\xcf\x04j2\xd3Q\x9a\xdc\x86\xfd>\xda\xa6B\x92\x92K\xf1\xe24\xd3\x89#\xc9\x12\x92\x82#\xd7\xf1 \x15{\xa5\x27\xe7V\xcd_\xa8\xcaQ{z\xb1t)\x91NY\xc4)-\x1c\x82N\xd1\xb3\xb6[d]\xbb;\xf0\x03\x94\xef>3\xacs\x8e{\xc2\x14\x00\x00\x00\x00X\xba?\xe3\xea\x27:\xdfx\x0e\xaa\x14\xbbD\xb1\x7f^\xbc\xc4_\x08\xc0]\x00\x05&\xe9#>\x93l\xbd>\x94\xbf\x08n5h\xbe\xdfI/]g)\xb3e\xc8\x84\xc11\xb2{Dx-s\xbb\xd4\x03\x9e/B2\xbd+\x04\x7f\xf3\x1d\xf7\x84 \x00\x00\x00\x00\xf6\xcb\xee\xc6y\x0f0\xea\xdau\x07\xb4\x85\xa1F\x95$\xfbH\xcbp\x09\x1f*.\x1f\xaf\xaa_\xbbs\xe217^\xac\xb2\xf3\xaf5V\x9c\xdb\xaf\x99\x1b\xabL\x95\x92\x9c2\xd0\xb6\x8f:\xfb@e\xf2\xa2\xe1\xfa\xfa\xa5\xfb\xb7>!\xe5E\xc3\xf5\xf5K\xf7n|@br\xbdXvCR\x1c\xabN[\xccg\xaaqR\x16jo;\xf6O9,\xfd\xc3/\x95\x17\x0f\xd7\xd5/\xdd\xb9\xf1\x01\x1a\xeb\xae>\xea\x9dy\xc58\xe2\xcf*Z\xcc\xcc\xd4}\xa6f<\x80\x00\x00\x00\x96\xaaZ\xf5\xaa2\xe1"|\x154u\x04\x12\xe3aIWXG\x8cc\x06z\xeaZ\x1e\xba\x8d\x9a\x85\x97U\xa47?\xf8\xa2\xa3B~\x0a\x1bY\xc6u\xf4\x9b\x8e\xa5fdF\x8d\x9c\x91\xe3\x1a\xeb\xa0\x08.\xad\xcfD\xb6\x15\xe9j\x9d7\x816\xb5\x1e\x12\x85\x19\x99gB\xf5v\x80\x9e\xa1\xd8\xb7\x1d\xc7\x01S\xe9p\x12\xf4d\xb8m\x9b\x8a}\xb6\xcbkM=%\x17i\x08\xaa\x9d&}\x1as\x90\xaa1\\\x8d!\xa3\xc2\x90\xb2\xff\x00\xdd\xc7\xec\x01\xf5\x14\x8a\x83\x94\xd7*I\x8a\xbf\x91\xb4\xeaZ[\xc7\xa1%fY"1\x9e\xbdoN\xb7**\x838\x90n\xa5\xb48\xa3i[I"Qd\xb5\xed\x01\x1b\xb0\xad\x9d\xbd\x93\xd93\xc6q\xa0\xfam\xac\x88\xcc\xd0\xa2$\xe3:n\xc8\x0f \x00\x04\x03\xf6\xa9\xd7\x8d\x05\x93i\xba\x9b\xad>\xed\x1e\x0cy\x94\xa3A\xe7i\xee\xa7d\xdb3/\xfbl\xab\x07\xeb/\xb8g\x9b[\xa1I~\xaf*\xb1*,\x86]\x8fKS\xc9J\x92\xa3^\x14f\xe1$\x8b\xb3:\x91\x00\xf6\x9a\x93\xa7{@~u\xc3@~\x8c\xa9\x8bT\x16Y4u\x8d\xb5\xd5\x9e\xce\xb8\xf4RZ\x11\x91\x9e\xf1\x19F\xb9\xa5Vi/\xb9L\xabQ\xa9\xb5\xd4N\xd9yRP\x86\x92q\x13\xfd\xa9F\x984\x96\xb9"\xd7\x7fh\x0d\x8a\xd5b\xc8]\xb3Y##\x91OUa+DxN\xa5\xb5-{\x09\xdaZH\xfe\x81\xa8\x95\xa9{\x06\x1a%z/I\x93j\x14\xca\x94eE\x84\xc9\xb1&)\x99\x9a\xfa\xa42dKJ\x97\xda\xa4\x99\xff\x00\xb0\x1e\x1b\xbc_\xb8\xed[\x97\xe4\x95(\x11\x1f\xf9\x7f\\\xcb2v\x11\xfd6\x08\xb0Y-OO\xf6%$\xdd\x10\xa6\xdc5z,\xb90\x1d\xa3\x1d\x0c\x96I\xc22\xe3\xa4\x94\xe3\xd3\xdej"3",\xe9\xec\x01\x82e^\x90\xaal\xc7\x1c\xa9\xd2Wj9K&\xe1\xd3\x90I\xeb\xd0\xfe\xc9}\x1cm\x12\xf3\x9d\x7f\x01\xeeE\xcd\x1aEv\xa5DzE5T\xb5P\x89Z\xa5\x1f\xccx\x9b,e^\xb5\x16\xec}\xc0?\x0f0\x00\x00\x00\x00\x00\x01+\x12\xe7\xad\xc1\xa2\xbdF\x8bQu\x98\x12\x0c\xcd\xd6Q\x82%d\xb0z\xef\xd7\xd6\x02(\x00\x00\x00\x00\x7f\xff\xd9')

        bc[3] = 0
        bc[4] = i
        i2c.send(bc, 98)
        pyb.udelay(228)
        i2c.recv(ba, 98)
        for j in range(128):
            da[i*256+j] = ba[j+1]

def screenload(i2c, sa):
    b=bytearray(7)
    l=128*96*2+2
    b[0]=2
    b[1]=0x70
    b[2]=l & 0xff
    b[3]=(l >> 8) & 0xff
    b[4]=16
    b[5]=128
    b[6]=96
    i2c.send(b, 98)
    for i in range(96):
        i2c.send(sa[i*256:i*256+256], 98)

fbc_main="fbc_main"

d={}

d['x']='y'

sw=pyb.Switch()
i=0
while sw:
    print(fbc_f(i))
    pyb.delay(1000)
    i+=1
    if i > 1:
        break
def play_jpg(j, x=0, y=0):
    zdmmx.oled.pos(0,0)
    for i in range(len(j.cindex)-1):
        print(i)
        ba=zdmmx.cjext(j.img, j.cindex, i)
        print(len(ba))
        zdmmx.i2cout(ba)
        pyb.delay(64)

fby=bytearray(15000)

from main import dia, i2cout
import mpy_logo

h=uhashlib.sha256(st.img[0])
ubinascii.hexlify(h.digest())
print(s1, s2)

img=[]
img.append(b'\xff\xd8\xff\xe0\x00\x10JFIF\x00\x01\x01\x01\x00\x01\x00\x01\x00\x00\xff\xdb\x00C\x00\x0a\x07\x07\x08\x07\x06\x0a\x08\x08\x08\x0b\x0a\x0a\x0b\x0e\x18\x10\x0e\x0d\x0d\x0e\x1d\x15\x16\x11\x18#\x1f%$"\x1f"!&+7/&)4)!"0A149;>>>%.DIC<H7=>;\xff\xdb\x00C\x01\x0a\x0b\x0b\x0e\x0d\x0e\x1c\x10\x10\x1c;("(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\xff\xc0\x00\x11\x08\x000\x000\x03\x01!\x00\x02\x11\x01\x03\x11\x01\xff\xc4\x00\x1a\x00\x00\x03\x00\x03\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\x06\x01\x03\x04\x07\xff\xc4\x00)\x10\x00\x00\x06\x00\x04\x06\x02\x03\x01\x00\x00\x00\x00\x00\x00\x00\x00\x01\x02\x03\x04\x05\x06\x116u!17At\xb2\x07\xb1\x13\x17\xa1\xc1\xff\xc4\x00\x14\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xc4\x00\x14\x11\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xda\x00\x0c\x03\x01\x00\x02\x11\x03\x11\x00?\x00\xf1\x90\x00y\x825\xd5\x16\xe0\xcf\xb9\x03\x1b\xeb\x8b\xbf9\xdfc\x00\x8c\x00\x01K>\x8e\x0c\x7f\x8e\xea\xae\x9bB\xcad\xa9\x8e\xb4\xe2\x8d\\\x0d)\xe5\xc0\x076\x08\xd7T[\x83>\xe4\x0co\xae.\xfc\xe7}\x8c\x07T\x0a82>:\xb4\xbbq\x0b9\x91\xa6\xb4\xcbj%\x1eD\x95\x17\x1e\x02d\x00-m\xba;C\xb8\xc8\x00\x9b\x04k\xaa-\xc1\x9fr\x067\xd7\x17~s\xbe\xc6\x01\xd5WG/7&>\x84H\x00Z\xdbtv\x87q\x90\x016\x08\xd7T[\x83>\xe4\x0co\xae.\xfc\xe7}\x8c\x03\xaa\xae\x8e^nL}\x08\x90\x00\xb5\xb6\xe8\xed\x0e\xe3 \x04\xee\x19\x9e\xc5^(\xab\xb0\x94j&#Km\xd7\x0d%\x99\x92R\xa23\xe03\x89\xe7\xb1i\x89\xec\xe7\xc55)\x892\x9cq\xb3Rr3I\xa8\xcc\xb3.\xc0(j\x8c\xbfO^\x97r\xb2\x8e\x7f\xc1"\xec\x09\x8cEj[\xb1\x1en;\xd9\xfe\x27V\xd9\x92\x17\x97<\x8f\x91\x80\xd0-m\xba;C\xb8\xc8\x01\x14\x00\x16\x95=!\xbe\xdcc\xff\x00\xa1e\xb6-r\xd7\x08\xd4\xe1\xf5DKh\xac5\x1a^%\x99\x9b\x99\xe7\xdb\xb70\x1f\xff\xd9')
img.append(b'\xff\xd8\xff\xe0\x00\x10JFIF\x00\x01\x01\x01\x00\x01\x00\x01\x00\x00\xff\xdb\x00C\x00\x0a\x07\x07\x08\x07\x06\x0a\x08\x08\x08\x0b\x0a\x0a\x0b\x0e\x18\x10\x0e\x0d\x0d\x0e\x1d\x15\x16\x11\x18#\x1f%$"\x1f"!&+7/&)4)!"0A149;>>>%.DIC<H7=>;\xff\xdb\x00C\x01\x0a\x0b\x0b\x0e\x0d\x0e\x1c\x10\x10\x1c;("(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\xff\xc0\x00\x11\x08\x00`\x00\x80\x03\x01!\x00\x02\x11\x01\x03\x11\x01\xff\xc4\x00\x1b\x00\x01\x00\x03\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x06\x07\x05\x03\x02\x01\xff\xc4\x00B\x10\x00\x01\x03\x03\x01\x04\x06\x04\x0b\x06\x07\x01\x00\x00\x00\x00\x01\x00\x02\x03\x04\x05\x11\x06\x07\x12!1\x1367At\xb3\x16Q\x94\xb1\x14"#4Uqsu\x83\xb2\xd123Va\xa1\xd2\x15BRr\x81\x91\xa2\xc1\xff\xc4\x00\x14\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xc4\x00\x14\x11\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xda\x00\x0c\x03\x01\x00\x02\x11\x03\x11\x00?\x00\xd9\x91\x01\x10B\xac\xbcZ\xed\xd2\xb6*\xeb\x95%,\x8en\xf0d\xf3\xb5\x84\x8f^\x09\xe4\xa3\xfaQ\xa7\xbe\x9e\xb6\xfb\\\x7f\xaa\x07\xa5\x1a{\xe9\xebo\xb5\xc7\xfa\xafH5\x0d\x92\xa6fAOy\xa0\x96Y\x0e\x19\x1cu,s\x9c}@\x03\xc5\x07\xe4\xba\x8e\xc5\x04\xcf\x86k\xd5\xbe9#qk\xd8\xfa\xa6\x074\x8e`\x82x\x15\xf1\xe9F\x9e\xfaz\xdb\xedq\xfe\xa8\x1e\x94i\xef\xa7\xad\xbe\xd7\x1f\xea\xa4\xd1\xdd\xed\x97\x17\xb9\x947\x1aJ\xa7\xb0e\xcd\x82v\xbc\x81\xeb8(&"\x02 "\x02 \xc0\xf6\xf9\xd6\xfa\x0f\x00\xdf1\xeb/@V=\x9ev\x83d\xf1lA\x1f[u\xe6\xfb\xf7\x8c\xfea\\D\x05\xabl\x07\xac7O\x08\xdf\xce\x10n\xc8\x80\x88\x08\x80\x880=\xbeu\xbe\x83\xc07\xccz\xcc\xa1\x8f\xa5\x9d\x91\xe7\x1b\xee\x0d\xcf\xab(:\xfa\xc3N\x8d)\xa9\xea\xec\xa2\xa8\xd5\x0am\xcf\x951\xeeoo1\xae\xe5\x93\x8f\xda\xc7>\xe5\x27g\x9d\xa0\xd9<[\x10G\xd6\xddy\xbe\xfd\xe3?\x98W\xae\x88\xd2\xc3Xj6Z\x1dXi\x03\xe3{\xfaQ\x1e\xff\x00\xec\x8eX\xc8\xf7\xa0\xe08n\xb8\x8fQZ\xae\xc0z\xc3u\xf0\x8d\xfc\xe1\x06\xec\x88\x08\x80\x88\x08\x83\x03\xdb\xe7[\xe8<\x03|\xc7\xac\xd6\x8f\xe7\xb0}\xa3}\xe8-\xdb_\xed6\xeb\xf8>K\x17;g\x9d\xa0\xd9<[\x10G\xd6\xddy\xbe\xfd\xe3?\x98U\x93b\x9d\xa2C\xe1\xa5\xf7 \xa0\xc9\xfb\xc7}kU\xd8\x0fXn\xbe\x11\xbf\x9c \xdd\x91\x01\x10\x11\x01\x10`{|\xeb}\x07\x80o\x98\xf5\x9a\xd1\xfc\xf6\x0f\xb4o\xbd\x05\xbbk\xfd\xa6\xdd\x7f\x07\xc9b\xe7l\xf3\xb4\x1b\x27\x8bb\x08\xfa\xdb\xaf7\xdf\xbcg\xf3\x0a\xb2lS\xb4H|4\xbe\xe4\x14\x19?x\xef\xadj\xbb\x01\xeb\x0d\xd7\xc27\xf3\x84\x1b\xb2 "\x02 "\x0c\x0fo\x9do\xa0\xf0\x0d\xf3\x1e\xb3Z?\x9e\xc1\xf6\x8d\xf7\xa0\xb7m\x7f\xb4\xdb\xaf\xe0\xf9,\\\xed\x9ev\x83d\xf1lA\x1f[u\xe6\xfb\xf7\x8c\xfeaVM\x8av\x89\x0f\x86\x97\xdc\x82\x83\x27\xef\x1d\xf5\xadW`=a\xba\xf8F\xfep\x83vD\x04@D\x04A\x81\xed\xf3\xad\xf4\x1e\x01\xbec\xd6kG\xf3\xd8>\xd1\xbe\xf4\x16\xed\xaf\xf6\x9bu\xfc\x1f%\x8a\xbd\xa6\xee\xed\xb0\xea:\x0b\xab\xe136\x92a!\x8c;t\xbb\x1d\xd9A\xe5}\xb8\xb6\xf1\x7f\xb8\\\xdb\x11\x89\xb5\x952N\x18NKw\x9cN3\xff\x00*\xdd\xb1w\xee\xed\x1a\x98c;\xf0J>\xaf\x8b\x9f\xfe \xabY\xf4\xfd\xd7R\\d\xa2\xb4R\x1a\xa9\xd8\xc3#\x98\x1e\xd6\xe1\xa0\x80N\\@\xe6G\xfd\xad\x17`\xb1\xba-Kw\x8d\xe3\x0ee(k\x87\xa8\x87\x84\x1b\xa2 "\x02 "\x0c\x0fo\x9do\xa0\xf0\x0d\xf3\x1e\xb3Z?\x9e\xc1\xf6\x8d\xf7\xa0\xb7m\x7f\xb4\xdb\xaf\xe0\xf9,T\xb4\x05z\xd8\xd7i\x14_e7\xe4(9z#X\xbbD\xdf\xea.m\xa1\x15\xa6ZwA\xd1\x99z<e\xcdvs\x83\xfe\x9f\xea\xae\x9b\x09\x97\xa7\xd5W\x99\xb7wzJ}\xecg\x96_\x94\x1b\x92 "\x02 "\x08\x15\xf6+=\xd2f\xcdq\xb4\xd1VH\xd6\xee\xb5\xf5\x14\xec\x91\xc0s\xc0$\x1e\x1cJ\x8c4\x86\x99k\x83\x9b\xa7m@\x8e \x8a(\xf8\x7f\xe5\x07\xb5^\x9b\xb1\\*_S[e\xb7\xd4\xce\xfcoK5+\x1e\xe7``d\x91\x93\xc0\x00\xbc=\x0f\xd2\xff\x00\xc3v\x9fa\x8b\xfbP=\x0f\xd2\xff\x00\xc3v\x9fa\x8b\xfbW\xbd\x1e\x9d\xb1\xdb\xaaEM\x0d\x9a\xdfK;A\x02X)X\xc7\x00y\xf1\x03(<}\x0f\xd3\x07\x9e\x9c\xb4\xfb\x14\x7f\xda\xa5PX\xed\x16\xa9\x1d%\xba\xd7EF\xf7\x8d\xd7:\x9e\x9d\x91\x97\x0fQ \x0c\xa0\x9c\x88\x08\x80\x88\x08\x82=\x0d\xc2\x8e\xe7J\xda\xaa\x0a\xb8j\xa0q K\x0c\x81\xed$\x1c\x1e!H@D\x04A\xe2+)]V\xea1S\x11\xa9kw\xcc!\xe3|7\xd7\xbb\xcf\x1cG\x15\xec\x80\x88\x08\x80\x881\xed\xa4:\xe1I\xb5\x1a[\xc5\xb7.\x9e\xcfhek\xa3\x07\x1d$m\x99\xe2F\xe7\xb8n9\xd9\xfe@\xa8\x02\xed>\xa7\xda\xbd\x8bQ\xb7x[g\xac\x92\x92\x81\xafi\x05\xcc\x89\xa0\xb9\xff\x00Qt\x87\xfa\x8e\xe4\x1e\xbaWW\xdf\xabhl\x1an\xc6-\xd6\xda\xab\x87O4\x95\x02\x99\xa1\x8ck\\\xee\x0d`\xe1\x9f\x88\xec\xf0\xf5r\xe2\xbb\xd7K\xf6\xbc\xa2\xd4\x16-<\xca\xbbK\xee\x15\xf1M\xd2H\xd8\xdd\xd1|]\xec;\x8f\x1c\x803\x81\xc3#\x1c\x90D\x1a\xb7[\xd7P^\xae\xd4u\xd6\xc8i\xf4\xfb\xcc2\xc1,$\xba\xa9\xd1\x8f\x94q<\x0bs\xc4\x801\xcf\x1c\xc6Mb\xb6\xe3\xa7\xef\xbbC\x9e\xe7\xa9-5uT\xb5\x96\xa8&e5.\xfb\x9e\xc9\\\xc8\x88\xfd\x92\x09\x00\x17\x0c\x9e\x1cG\x04\x1d\xdd+x\xd4\xdaB\x86\xc2\xfb\xc3\xa6\x86\xc7]_-(\x8e\xb1\xa0K\x03\x08\x1d\x11s\x8f\x103\xbcx\xf0\xc3}D(w\xfb\xfe\xa8\xbfi\xfb]\xecV\xc7OEY\x7f\xe8\xe8b\xe8\xf7\\\x18\x0b\x84e\xc5\xa7\x88\xc8x \xf3\xc0A>H5c\xf6\xb5W\x05\xb6\xb2\xdc\xcb\xb1\xb34OS$n\x11\x01\xbc\xc3\x96\xb7\x8f\x1c\xee\x8e9\xe0I\xf5%\x9bh\xfa\x9fSCc\xb3P\xba\x92\x92\xe7^\xe9\x84\xf5\xb2G\xbc\xd0\xd8\xf2r\xd6r\xde \x1c\x8e\\\xb9g\x80|Um#U\xd2\xd3Om&\x8eK\xad\xbe\xf3\x0d\x0b\xe6c>N\xa1\xaf\x12p#\xfc\xa71\xf1#\x1c\x0f!\x85e\xd2\x9a\x83S\x0d{q\xd2\xfa\x86z:\xa3\x15 \xab\x8eZh\xf7\x03x\xb4n\x8fX\xf8\xfd\xfcx\x7f4\x17\xd4@D\x1c\xb9\xb4\xed\xba\xa3P\x7f\x8d\xcd\x1b\x9fTh\xcd\x11\x0e9c\xa2.. \xb7\xbf\x89*1\xd1\xd6A=\xa2Hi~\x0e,\xce{\xa9#\x85\xdb\xaci~7\xb2;\xf8\x8c\xa0\xe7\x1d\x98i\x87Y\xe9m\x86\x9a}\xca7\xb9\xf4\xf3\x09\x8be\x8c\xb8\xe4\xe1\xc3\xbb=\xcaM\xb7@i\xfbMu\xb6\xb2\x86\x9aH\xa4\xb66A\x07\xca\x92\x09x!\xc5\xd9\xe6NJ\x0f\x0b\x9e\xcc\xf4\xb5\xda\xe55}E\x14\xad}K\x83\xeac\x86w\xc7\x1c\xee\x1d\xeeh<\xf3\xc7\x868\xe4\xf3+\xa5C\xa4\xad\x16\xddC-\xf2\x92\x17EU%3iwZ\xecF\xd8\xdb\xba\x00\x0d\xe40\x18\xd4\x1c]\xa2X\xb5\x16\xa8\xa1m\x92\xdb\x0d\xb4[\xea\x03L\xf5\x15\x0fwK\x13\x9a\xf0r\xd0\x061\x81\x8e\xf2rG\x0e\xfe\x9dv\x88\xb2\xdc\xb4\xb5&\x9d\xab\x85\xef\xa4\xa3k\x04.k\xb7\x1e\xd75\xb8\x0e\xc8\xef\xe2s\xf5\x94\x1fv\x9d\x1bi\xb2\xdd\x9bt\xa4\x15\x06\xa4R\x0a=\xe9f/\xcc`\x83\xc7=\xf9h\\\xe1\xb2\xfd.-\x10\xdb~\x0b6\xe5<\xce\x9e\x09\x84\xee\x12\xc4\xf7c$8\x7f\xb4p\xfeH=\xa3\xd9\xc6\x9a\x86\xdbOA\x0d,\x91\xc7\x05[k7\x84\xa4\xbeIZ\x08\x05\xce9\x27\x99\xe1\xc9u"\xd3\x96\xf8u<\xda\x8d\x8d\x93\xe1\xf3\xd3\x8aw\x92\xff\x00\x8b\xb9\x90yz\xfe(A\xd5D\x1f\xff\xd9')
img.append(b'\xff\xd8\xff\xe0\x00\x10JFIF\x00\x01\x01\x01\x00\x01\x00\x01\x00\x00\xff\xdb\x00C\x00\x08\x06\x06\x07\x06\x05\x08\x07\x07\x07\x09\x09\x08\x0a\x0c\x14\x0d\x0c\x0b\x0b\x0c\x19\x12\x13\x0f\x14\x1d\x1a\x1f\x1e\x1d\x1a\x1c\x1c $.\x27 ",#\x1c\x1c(7),01444\x1f\x279=82<.342\xff\xdb\x00C\x01\x09\x09\x09\x0c\x0b\x0c\x18\x0d\x0d\x182!\x1c!22222222222222222222222222222222222222222222222222\xff\xc0\x00\x11\x08\x00<\x00P\x03\x01!\x00\x02\x11\x01\x03\x11\x01\xff\xc4\x00\x1c\x00\x00\x01\x05\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\x01\x03\x04\x06\x07\x08\x02\x00\xff\xc4\x008\x10\x00\x02\x01\x02\x05\x02\x04\x03\x06\x03\x09\x00\x00\x00\x00\x00\x01\x02\x03\x04\x11\x00\x05\x12!1\x06A\x13"Qa\x14q\x81\x07\x152r\x91\xa1\xb1\xd1\xe13BCRd\x92\xb2\xc1\xf0\xff\xc4\x00\x1a\x01\x00\x03\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x03\x04\x05\x00\x01\x06\xff\xc4\x00\x27\x11\x00\x02\x03\x00\x01\x04\x01\x04\x02\x03\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03\x11\x04\x12!"1A\x05#Qa\x13\xf0q\xd1\xe1\xff\xda\x00\x0c\x03\x01\x00\x02\x11\x03\x11\x00?\x00-\x95D\xa8\xcb\xb5\xb1i\xa6p\x9dC\x97\xb7\xfaY\x87\xee\x98\xcbN\xcd7\xb9\x03S%\x9aJ\x8b\xa5\xbd\xb0\xb9(\x1e%K[rW\xfe\xf0\xfa\xce\xda$\x0e\xbd5\x19]\xcb\xc6\xbf\xb3\x1c\xd1Gx\xaaG\xecq\x91CL\xb1\x93\xfc\xb0|\x83\xdcOxC\xc4\xc4\x92\xeb8\x00~\xd8\x1bOL\x952\xb24\xa5$-e\x1an\x1b\x9e\xf7\x00\x1f\x9e:\x81\xee{\xc9>\xa3\xb3\xe5_\x0e\xa2F\x07i\x15|\xcc\xbf\xe6\x1d\x85\xfb{\xe3\xa6r\xdb}\xd9Kn<$\xff\x00\x88\xc3\xc0\xf2\x919\xed1\xec\xa2`i)\x8b\x1f3D\x8d\xb9\xfcW\x1f\xd3\x04s\x9a\xd9))\x9e\xaa\x27h\xe4\x86\x86\xa9\x91\x97\x90B\x02\x08\xfd1\x02\x8f,\x9bV\x9f\xb7\xbf\xe2g\x19_^\xf5\x0duj\xd3\x9c\xd6\xa1\x9a1\xa8\x97D;\xfbm\x8d\xef\xa2\xc5_\xdd\x1e5mCM,\xcc\x18\\(\xb2\xdbn\x00\xf9\xe2\xa5\xac\x06\xd12^\xd6d\xc3\x06d\xa3\xc5\xfb8\xcc\xe3\xeeEB\xe3.\x92\x89\xa2\x91\x81m\xc7\xad\xff\x00\x9e\x03\x90|\xc0\x94\xf0\xc7\xdb\x27\xf7 K\x19\xf8\x9b\x02\x9cw_\xeb\x86M)\x06\xf68\x7f\x15wbym\x99\x16:b\xd5\x11\x83{\x97]\xfe\xb8\xe9Z!\xa2\x86\x05=\xa3A\xfb\x0c:\xc1\x8d%\xddY\xce\xf4\xf5\xb36S\x97E\x0c\xa9\x1b,k\xad\xb5\xe9#\xca\x05\x8f\xa7s\xef\xf4\xc3\x12\xf5\x15}U5L\x15\x12\xc3 Dh\x7f\x05\xae\xae\x0a\xb5\xed\xbf\x1d\xf1\x10LrL\xd8{A\xa5T\x7f}AYt4t5\x9f\x13\x15\x1cz\xcd\x97y^\xc4\x7f\xbb\x1a\xcfO\xf5\xb6s%<k\x0eE\x1c\xb0\x03\xa4K\x19p\xbb\x0b\x91}\xc5\xf8\xc1\xf5\xf6\xdc\x93\x1a\x01\xecNA4\x1d~r\xdc\xb6\xaf&\xa5\xca\xde\xb6]nZE\x94*\xc6[\xb3\\[oLW\xb3\xcc\xda:x\xa3\xa9Z\xfaY\x04\xaeS\xca\x1fc\xf9J\x83o}\xff\x00q\x7f^\xb0\xed\xd4b\xab\xb1\xaaL\x1e\x8c\x0d\x15l\x92W\x14\x9e0\xa4\x8f+\xc6\x0b+\x8e\xc4\x1fO\xfcq`\x13\xd17w\x07\xdd/\xfc/\x87\xd2\xcbI\xf2\xf9\x81j\xb7!A_\x88\xa8h\xb5\xab\x09\xd1H \xf9\xd5\x97\xbf\xcb\x1a\xe5/Xt\xe9M#;\xa3\x04\x00<\xeeS\x80\x07p1\xed\xb6+\xb6\xacJ\xd2\xea\xb8D\xe7\xda\x8a\xc1\x92j\x92G\x99\xe6x\xc4\x0b\x12F\x87\xb1[\x06\x27\xf3ol\x04\xcb\xf3\xdaZ,\xc2\x03_\x97\x09a]*\xc1j-\xac)\xb8\xd4@7<^\xc3\x81\x85\x8d`H\x8e\xb4\x85!L\xbfF\xb9T\xae\x95\x19}L\xc2i_\xc9\xa6Xf\x0d}\x8d\x89K7o-\xc1\xdf\x81\x82\x8a\xb9\xddNC[C\x91I\x94]$h\x99\xe4\xa5h\x1f]\xecN\x90\xcd\x19&\xd6\xb9Q\x8ck9\xd6q[/\x1d\xbf#\xfb\xeaV\x13\xf9\x13P\xcc\xf2\xa2\xa2\xbf\xa6\x0cy~w\x97\xd6\xd2\xa2\xb6\xa5\xd2\xe1\x92S{\x93\xe8\xf7<\xf9\xaf\xbe!g]AG\x98$\xa4?\x88$}b0\x8d\x1f\x87\xb1\xe6\xf7\x1b\\\xf0N5jd\xb5E\x88t\x19\x1b\x12\x9e\x06;\x15d\x90e\xb1\xbdl\xc28\xea\x1f\xc5\x85\x8a\xd9\xbb\xea\xf2\x9f\xee\x92y\xe3\xcb\xeapN\x9e\xacMJ\xb5qV\xa7\x82X\xa0z\x98\x1e%\xd69]k\xa9o\xecH\xc3\x8a\x86\x18\xd1kc!\xd5\x85\x1eD\x8eO\x08TB\xc4\xa8u`\xfb0$\xdbK\x10\x03q\xc8\xef\xb5\xbb\xe0\xc5\x1d;\x1a$\x9c]\xb5\x8cO`\xe9\x96\xd5g_\xb9U\xcd\xe3\xfb\xc3$tZT\x9e\xadJ\xb2M\xfe!P|\xcb\xefpO\xbe\x04fu\x14\x159"A\x13C\xe3X$p\x80|@\xf7\xfcF\xe3\xca\x00\xb8\xc5U\x90\x01\x91\xdd\xd4H&\x01H$\xa1i\x13\xc4rX\\xM\xe5b/c\xbe\xcc1\x7f\xe8\x9e\xba\x14u1Pf\x933E#\x00\xb5\x0e4\x98\xf6\xb0\x0f\xed~\xe7\x8d\xbbc;\xea\x9cA\xc9\xe3\x90\x07\x90\xf5\xfe\xa3x\xb6\x9a\xac\xfd\x19\xa6TTey\xed\x03\xd2\xcaik\xa9\xa4\x1b\xc6\x188>\xe2\xdc\x1fq\xb8\xc6?\xd5\xbd\x0bQ\x97f\x90|\x10\xf1(\xa7\xf2F\xcc7W\xb1!\x1f\xe7\xc0=\xfb\xd8\xe3\x07\xe8\\\x87\xa2\xd3\xc7\xb0`oC\xf0\x7f\xec\xbb\x9bJ\xbau\xac\x87\xd2\xf9\x04\x99\xec\xae\xcf(C\xb0y\x1c\x02E\xf8\x1b\xf0\x00#\x1e\xf3Jz\x9e\x9f\xa9\xf8x\xa6Y)j\x941]>I\x806\xb3(6$X\xef\xe9\xc5\xb1\xf69\xa3f>\xf7\xd9_z\xd7\xa4\xf1(\x9eI\x0c)!*C\x1b~a\xe8}\xfe\x86\xf8\xbd\xf4\xff\x00W\xd0Q\xe4\xcb\x04\xb2T\xd4\x11\xcbx?\xd9\x9e\xe0\xd8\xf0}~{b{\xab.\xb8#\xe8\xb4#u\x19\x0f\xc61\xd3\x92\x9f\x8b\x81\x86\x0d$l\x86R\xb7\x94\x8b\xebcr}\x8e\x19X\xde\xe6\x0d\xad\xe8H\xf2e1\xd5"\x89\x12\xe4\x13\xdb\xb6\x10d4\xeaU\x1a\x0dB\xdb\x02N\x09\xc6\x0d\x80\xb8NI\x11\xf4\xb5\x0c\xb6\x11\x97\x86b\xd6\x0a\x09k\x1fr7\x1f\xa6#\xc9E\x99R\xdd!\xcdj\xd58\xb0\x98\xb2\x9bzoc\x84\x00\x8eq\x86\xc70(\xba\x27\xd9=Va\x90\xb3\x98\xa1\x8e\xaa\x27\x1a^7<\x8f\xe3\x7f|B\xcf+s,\xea\xb8N\xf4\xa2\x9d\x11t\xa4q\x1b\x05\x1fRO\xd7\x14\xefl\x93\x9e\xd0z\xe5\xd3J\xc5\xa6\x17\x27\xd4\xdb\x16\xfc\x97\xa7(jr\xf4\x12\xc4\xe85\xdd\xd8\x02Xp\x09\x17\xeflp\x10I\x89\x1a\xea\x16"\xf8#A\x97\x0a\x99\x95\x09\x0a\x09\xef\x80\x1d\xa3\x1b\xbc\xd4\xf2\x1e\x87\xcbM\x18\xf1Udw\x1e\x98\x07\xd4}\x14\xb9l\xc6xu\x08\xfb\x06\xdc`\xac\xf2N\x98\xb4\xf1}\x95\x87\xa5\x85\x8a\xa3\x03\xabpT\xfaX\xf7\xc7\x83G\x1a&\x85@\x16\xdcv\xfd0\x15\xa6\x08\xdb,\x88\x99]+\x9b\x11\xa0\x9fM\xc6\x14\xf4\xe4.\x7f\x11\xb7\xa8\xc3\x82\x899c\x15zn\x906\xfa\x8e\x0bS\xd0\xc7M\x08\x8d5\x15\xf4\x27\x05\xd3\x93\xcd2\x9d\x08\xe3\x06r\xf3i\x01\x1e\xb8J\xfb\x8f3c\xe8\xfa\x99\x1e\x8a\xccA\xb2\xed\x88\xddKY#\xb3\xc4B\xe9\xe3\x8c\x1f\xccW\xc4\xa8\xfd\xdfO#\xc7\xa9N\xe0\xf7\xc4\x1c\xc6\x82\x08\xc0+\xa8}p\xe0\x07LY\x27\xaa3O\x0a(\xbd\xaf\xf3\xc4\xe0\x83M\xed\xbf8\x118\xcfj\x07\x16\x18jc\xa5\x0d\xb1\xc6p\x9f\xff\xd9')
img.append(b'\xff\xd8\xff\xe0\x00\x10JFIF\x00\x01\x01\x01\x00\x01\x00\x01\x00\x00\xff\xdb\x00C\x00\x0a\x07\x07\x08\x07\x06\x0a\x08\x08\x08\x0b\x0a\x0a\x0b\x0e\x18\x10\x0e\x0d\x0d\x0e\x1d\x15\x16\x11\x18#\x1f%$"\x1f"!&+7/&)4)!"0A149;>>>%.DIC<H7=>;\xff\xdb\x00C\x01\x0a\x0b\x0b\x0e\x0d\x0e\x1c\x10\x10\x1c;("(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\xff\xc0\x00\x11\x08\x00`\x00\x80\x03\x01!\x00\x02\x11\x01\x03\x11\x01\xff\xc4\x00\x1b\x00\x01\x00\x03\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x06\x07\x05\x03\x02\x01\xff\xc4\x00B\x10\x00\x01\x03\x03\x01\x04\x06\x04\x0b\x06\x07\x01\x00\x00\x00\x00\x01\x00\x02\x03\x04\x05\x11\x06\x07\x12!1\x1367At\xb3\x16Q\x94\xb1\x14"#4Uqsu\x83\xb2\xd123Va\xa1\xd2\x15BRr\x81\x91\xa2\xc1\xff\xc4\x00\x14\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xc4\x00\x14\x11\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xda\x00\x0c\x03\x01\x00\x02\x11\x03\x11\x00?\x00\xc6Q\x01\x10L\xa3\xb3\xdd.1:Z\x1bm]Tmv\xe9|\x109\xe0\x1fV@\xe6\xa4z/\xa8~\x81\xb9{$\x9f\xa2\x07\xa2\xfa\x87\xe8\x1b\x97\xb2I\xfa/9\xf4\xf5\xee\x9a\x17\xcfQf\xaf\x8a(\xc6_$\x94\xcfkZ=d\x91\xc1\x07\xecZr\xfb<,\x9a\x1b-\xc2H\xe4hs\x1e\xcaW\x96\xb8\x1eD\x108\x85\xf7\xe8\xbe\xa1\xfa\x06\xe5\xec\x92~\x88\x1e\x8b\xea\x1f\xa0n^\xc9\x27\xe8\xa3VZ.v\xe65\xf5\xd6\xea\xbaV<\xe1\xae\x9e\x070\x13\xea\x19\x08""\x02 "\x02 \xde\xf6\x07\xd5\x0a\xff\x00\x1e\xef-\x8bQ@U\xbd\xa1\xf6}{\xf0\x8fA#D\xf5\x1a\xc5\xf7t\x1eX]\xc4\x05\x94m\xfb\xab\xd6\xbf\x16\xef\xc8PaH\x80\x88\x08\x80\x887\xbd\x81\xf5B\xbf\xc7\xbb\xcbb\xd3f\x93\xa2\x81\xf2c;\x8d.\xc7\xaf\x089\x1a?Q\x1dW\xa6)/F\x94R\x9a\x9d\xff\x00\x92\x12o\xee\xee\xbd\xcd\xe7\x81\x9f\xd9\xcf.\xf5\x1bh}\x9f^\xfc#\xd0H\xd1=F\xb1}\xdd\x07\x96\x17\x96\xb7\xd5\x27G\xe9\xc7\xdd\xdbF*\xcb$c:#&\xe7\xed\x1ey\xc1\xf7 \xb04\xef4\x1fXYN\xdf\xba\xbdj\xf1n\xfc\x85\x06\x14\x88\x08\x80\x88\x08\x83{\xd8\x1fT+\xfc{\xbc\xb6-.\xb3\xe6S\xfd\x9b\xbd\xc8*\x1b \xec\xca\xd5\xf8\xdes\xd7Gh}\x9f^\xfc#\xd0H\xd1=F\xb1}\xdd\x07\x96\x15sm}\x9d\xcd\xe2b\xf7\xa0\xbe\xc7\xfb\xb6\xfdK*\xdb\xf7W\xad^-\xdf\x90\xa0\xc2\x91\x01\x10\x11\x01\x10o{\x03\xea\x85\x7f\x8fw\x96\xc5\xa5\xd6|\xca\x7f\xb3w\xb9\x05Cd\x1d\x99Z\xbf\x1b\xcez\xe8\xed\x0f\xb3\xeb\xdf\x84z\x09\x1a\x27\xa8\xd6/\xbb\xa0\xf2\xc2\xaem\xaf\xb3\xb9\xbcL^\xf4\x17\xd8\xff\x00v\xdf\xa9e[~\xea\xf5\xab\xc5\xbb\xf2\x14\x18R "\x02 "\x0d\xef`}P\xaf\xf1\xee\xf2\xd8\xb4\xba\xcf\x99O\xf6n\xf7 \xa8l\x83\xb3+W\xe3y\xcf]\x1d\xa1\xf6}{\xf0\x8fA#D\xf5\x1a\xc5\xf7t\x1eXU\xcd\xb5\xf6w7\x89\x8b\xde\x82\xfb\x1f\xee\xdb\xf5,\xabo\xdd^\xb5x\xb7~B\x83\x0aD\x04@D\x04A\xbd\xec\x0f\xaa\x15\xfe=\xde[\x16\x97Y\xf3)\xfe\xcd\xde\xe4\x15\x0d\x90vej\xfco9\xea\xc5\xa9-\x0e\xbfi\xca\xfbS&\x10\xba\xae\x13\x18\x90\xb7x7=\xf8A\xe9b\xb7:\xcf`\xb7\xdb\x1d(\x95\xd4t\xd1\xc0^\x06\x03\xb7Z\x06q\xff\x00\x0a\xa3\xb6\x86ol\xe6\xa4\xe7\x1b\x93\xc4~\xbf\x8d\x8f\xfe\xa0\xb4\xde5\x05\xabM\xdb\xa3\xad\xbb\xd5\x8aX\x1e\xf1\x1b^X\xe7e\xc4\x12\x06\x1a\x09\xe4\x0f\xfd,\xeboR6]5h\x91\x87-}QsO\xac\x16\x14\x18b "\x02 "\x0d\xef`}P\xaf\xf1\xee\xf2\xd8\xb4\xba\xcf\x99O\xf6n\xf7 \xa8l\x83\xb3+W\xe3y\xcfWT\x05E\xdb/f\xf5\xbfk\x0f\xe7\x08:z\xdfG7[X)\xed\x8e\xae4B*\x86\xcf\xd2\x08\xbaL\xe1\xaen1\x91\xfe\xaf\xe8\xa9{v\x8b\xa0\xd2\xb6hw\xb7\xba:\x8d\xdc\xe3\x9e\x19\x84\x18r "\x02 "\x09\xd4\x17\xdb\xc5\xae\x17Cn\xbbV\xd1\xc6\xe7o9\x94\xf5\x0f\x8d\xa4\xf2\xc9\x00\x8e<\x02\x92u~\xa6sK]\xa8\xae\xa4\x1e\x04\x1a\xd98\xff\x00\xe9\x07\x95&\xa4\xbe\xdb\xe9\x9bMEz\xb8S@\xcc\xee\xc5\x0dS\xd8\xd6\xe4\xe4\xe0\x03\x81\xc4\x92\xbd\xbd0\xd5\x1f\xc4\x97on\x97\xfb\x90=0\xd5\x1f\xc4\x97on\x97\xfb\x97\x85f\xa2\xbe\\i\x8d5u\xe6\xe1U\x03\x88&)\xea\x9e\xf6\x929p\x27\x08=\xfd0\xd4\xe3\x96\xa3\xbb{l\x9f\xdc\xa2\xd7\xdf.\xf7X\xdb\x1d\xc6\xe9[X\xc6\x1d\xe6\xb6\xa2\xa1\xf2\x06\x9fX\x04\x9c \x82\x88\x08\x80\x88\x08\x82Eu\xbe\xb2\xd9T\xeaZ\xfaI\xa9gh\x04\xc54e\x8e\x00\x8c\x8e\x05G@D\x04A\xech\xea\x9bH\xda\xc3M(\xa6s\xb7\x04\xc5\x87p\xbb\xd5\xbd\xcb<\x0f\x05\xe2\x80\x88\x08\x80\x886\x0d\x9b\xb6\xdfW\xb2\xea\xab=\xcb\x0d\x82\xf1w}\x13d#=\x1c\x8e\x85\x867c\xbc\xef\xb5\xb8\xfed)\xe6\xd3\x06\x98\xd9E\xf7N;t\xdc\xa0\xa3\x8e\xae\xbd\xccp!\xaf\x95\xc45\x9fXlc\xfa\x1e\xf4\x1eZ\xabHXh\xab\xaf\xfa\x92\xf8n7*[\x7fA\x0ct\xe6\xa5\xc5\xefs\x9a\xde.y\xe3\x8f\x8e\xdcq\xf5\xf3\xe0\xb86\xbb\x0e\x83\xad\xd3\xf7\xddB\xfaK\xb3-\xf4\x12\xc3\xd1\xc6\xe9\x1b\xd2\xfcm\xdc\xb7\x87\x0c\x12q\x93\xc7\x07<\xd0K:KDP\xd7\xd9m5\x9479\xaa5\x03\x04\xd1O\x14\xc06\x95\xb2\x1f\x93h\x1cC\xb1\xc0\x12s\xcb<\x8e\x05\xa2\x8a\xdd\xa8,[<\x82\xd9\xa6\xee\xd4\x94\xb5TwY\xe1}MV\xe3X\xf8\x9a\xf9A\xfd\xa0@$\x86\x9c\x0e<\x0f\x14\x1c\x1dUg\xd3:\xbe\xba\xfc\xcb;a\x9a\xf9CA\x15Q\x92\x8d\xc4\xc5;\xc1=(kG\x02q\xba8q\xcb\xbd`\xa9\xb6\x0b\x06\x97\xb0\xea\x0b\xa5\x90\xd1IQ[G`\xe9+\xa5\xe97\x9a^CL\x81\xa1\xc3\x81\xc1a\x04r\xc9A\x029\xf4\x9b6KI=\xca\x8e\xe2\xfbH\xbc\xb8\xc1M\x1c\x8d2\x93\xba\xf1\x87;\x87\x0co\x1e\x18\xe2\x00\xf5\xaf\xcb\xce\xce4\xc6\x99\x9a\xf9y\xaem]]\xb2\x81\xb0\x98(\xa3\x93u\xc5\xd2`a\xcf\xe7\xba\x09\x18<\xf9\xf3\xc7\x10\xfb\xa5\xd9\xbe\x94\xaa\xa9\x82\xe4\x05dv\xab\x85\x9aj\xe6B\xf7\xfc\xa5;\x98c\xe2\x0f\xf9\x86$\xe0\x0ex\x8eg*\xb5\xaa\xf4\xfe\x99:\x0a\xdd\xaa4\xf4\x15\x94\xa2Z\xb3I$U2o\x97pq\xde>\xa3\xf1;\xb8q\xfeH(h\x80\x88:\x90\xea+\x8d>\x9f\xff\x00\x04\x86F\xb2\x94V\x0a\xd0Z0\xf6\xca\x1a\x1a\x08ww\x00\x14\x81\xacof\x0b\xbcsU| \xdeZ\xc6\xd5\xc93w\x9e\xe0\xcc\xee\xe0\xf7p8A\xd2\x1bO\xd4\xed\xbcU\\\xc5L\x1b\xf5\x8ck*!0\x87E h\xc0\xcbO~;\xd4[\x96\xbf\xd4\x17j\x1b\x95\x1duLr\xc7stf\x7f\x92\x00\x80\xc2\x0bCq\xc8\x0c\x04\x1e\xf6\xcd\xa6j\x9bM\xb6\x1a\x0az\xd8\x9c\xcaf\x96SI4\x0c\x92H\x1a{\x9a\xe29c\x87\x1c\xf0\xc0\xe4\x176\xbbV\xdd\xeeZz+\x1d\\\xcd\x96\x96:\x97Uo9\xb9\x91\xd2;x\x92]\xcc\xe4\xbd\xc8;[;\xbe\xe9\xdd/\\\xeb\xdd\xcak\x91\xb8S\x97\x08)\xe9\xd8\xde\x8aV\xb9\x84a\xc4\x9c\xe7\x27=\xc0`\x1e=\xdc\xca\x1doz\xb6\xea\x9a\xbdEI3\x19WX\xe7\x99\x9a\xe6\xef\xb1\xcds\xb2[\x83\xdd\xc0c\xea\x08>.\xda\xca\xedz\xb4\xba\xd7Vi\xc51\xab5\x9b\xb1B\x19\x89\x08#\x86;\xb0\xe2\xba\x27j\x1a\xa0\xdd\xe6\xb9|*\x1d\xfa\x88[\x04\xf0\x98\x1ab\x95\x8d\xce\x01i\xff\x00q\xe3\xfc\xd0x\xc9\xb4}K5\xca\xa2\xbej\xa8\xe4\x92zGQ\xee\x98\x80dq8\x82CZ0\x07!\xc7\x9a\xe5\xcb\xa8\xee\x13i\x88t\xe3\xdd\x1f\xc0 \xa85\x0c\x01\x9f\x1b\x7f\x04s\xf5|b\x83\x96\x88?\xff\xd9')
img.append(b'\xff\xd8\xff\xe0\x00\x10JFIF\x00\x01\x01\x01\x00\x01\x00\x01\x00\x00\xff\xdb\x00C\x00\x0a\x07\x07\x08\x07\x06\x0a\x08\x08\x08\x0b\x0a\x0a\x0b\x0e\x18\x10\x0e\x0d\x0d\x0e\x1d\x15\x16\x11\x18#\x1f%$"\x1f"!&+7/&)4)!"0A149;>>>%.DIC<H7=>;\xff\xdb\x00C\x01\x0a\x0b\x0b\x0e\x0d\x0e\x1c\x10\x10\x1c;("(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\xff\xc0\x00\x11\x08\x00Z\x00x\x03\x01!\x00\x02\x11\x01\x03\x11\x01\xff\xc4\x00\x1c\x00\x01\x01\x00\x03\x00\x03\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x06\x04\x05\x08\x02\x03\x07\x01\xff\xc4\x00=\x10\x00\x00\x05\x02\x03\x02\x08\x0c\x06\x03\x01\x00\x00\x00\x00\x00\x00\x01\x02\x03\x04\x05\x06\x07\x11\x12!1\x13"6AQtu\xb1\x14\x15\x16\x1747Va\x93\xb2\xb3\xc1Uq\x81\x91\x92\xd2\x27BR\xd1\xff\xc4\x00\x14\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xc4\x00\x14\x11\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xda\x00\x0c\x03\x01\x00\x02\x11\x03\x11\x00?\x00\xf8\xc8\x00\x00\x0d\xeb\x16=\xd3&;r\x18\xa0\xcdq\xa7RKB\xd2\xd1\x99(\x8fq\x90\xf6y\x01w{=?\xe1\x18\x07\x90\x17w\xb3\xd3\xfe\x11\x8cb\xb4\xae\x13\xaa*\x96Tyg5-p\xa6\xc7\x06z\xc9\x19\xe5\xab.\x80\x19>@]\xde\xcfO\xf8F\x1e@]\xde\xcfO\xf8F\x03\xd5&\xc9\xb9\xe1\xc6rL\x9a\x14\xd6\x99i&\xa5\xadM\x19\x12K\xa4\xc6\x8c\x00\x00\x00\x00\x00\x00\x80u\xad\xa5\xc9\x0a?Rk\xe4!\xb7\x00\x10Q\xfdz\xca\xecD\xfdB\x01z\x0047\xcf!\xeb=Q}\xc3\x94L\x00\x00\x00\x00\x00\x00\x80u\xad\xa5\xc9\x0a?Rk\xe4!\x81x\xd7\xa7Q%P\x1b\x87\xc1\xe9\xa8T\xdb\x8a\xf6\xb4\xe7\xc4Vy\xe5\xd0`)\x84\x14\x7f^\xd2\xbb\x11?P\x80^\x89K\x0a\xe2\x9fqF\xab9?\x82\xd5\x12\xa4\xecf\xb84\xe9\xe2$\x8b,\xfd\xfb@f\xdf<\x87\xac\xf5E\xf7\x0eQ0\x00\x00\x00\x00\x00\x02\x01\xd6\xb6\x97$(\xfdI\xaf\x90\x84\xf6$zu\xa5\xdb\xac}\xc0\\\x08(\xfe\xbd\xa5v"~\xa1\x00\xbd\x10\x18K\xe87\x0fm\xbf\xdc\x90\x147\xcf!\xeb=Q}\xc3\x94L\x00\x00\x00\x00\x00\x00\x80u\xad\xa5\xc9\x0a?Rk\xe4!=\x89\x1e\x9div\xeb\x1fp\x17\x02\x0a?\xafi]\x88\x9f\xa8@/D\x06\x12\xfa\x0d\xc3\xdbo\xf7$\x05\x0d\xf3\xc8z\xcfT_p\xe5\x13\x00\x00\x00\x00\x00\x00 \x1dkirB\x8f\xd4\x9a\xf9\x08ObG\xa7Z]\xba\xc7\xdc\x05\xc0\x82\x8e\x7f\xe7i]\x88\x9f\xa8@/D\x06\x12\xfa\x0d\xc3\xdbo\xf7$\x05\x0d\xf3\xc8z\xcfT_p\xe5\x13\x00\x00\x00\x00\x00\x00 \x1dkirB\x8f\xd4\x9a\xf9\x08ObG\xa7Z]\xba\xc7\xdc\x05\xc0\xc7(\x11\x0ay\xcf(\xcd\x14\xa5#\x837\xb4\x96\xb3N\xfc\xb3\xe8\x01\x90>{\x86\xee\x1czm\xd8\xe3dY\xb7Y\x94\xa4\x96[6$\x8c\x06\x1d2\xe7\xa8]\x98A[\xa8\xd4\xc9\xae\x18\x9by\xb2\xe0\x91\xa4\xb2$\x977\xea>\x02`\x00\x00\x00\x00\x00\x04\x03\xed\xd4Lm\xa0S(p 9N\xa8)\xc8\xd1\xd0\xd2\xcd)FFiI\x11\xe5\xc6\xdd\xb0j\xee\xbcY\xa2\xd7\xa4P\xdd\x8f\x06j\x0a\x9dRn[\xa4\xe1 \xb5!9\xe6E\x91\xef\x01C\xe7\xee\xdc\xfc6\xa5\xfcQ\xfd\x83\xcf\xdd\xbb\xf8eK\xf8\xa3\xfb\x00\xfd\xf3\xf7n~\x1bR\xfe(\xfe\xc2n\xce\xc5z-\xba\xdd]2\xa0\xcds\xc3\xeaN\xcbo\x83$\x1eHVY\x11\xe6e\xb7`\x0c\xfa\xf62[\xb5;n\xa1K\x8bL\x9c\xca\xe50\xa6\xd0f\x84\x12H\xcc\xb7\x9eJ\x1f\x18\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\xda`/%a\xfcea\x94+\x9a\x03\xef\xb9=dk\x91\x1c\xcc\x8c\x8d\xbdf\x8c\xd2DY\xec<\xbaw\x8d\xf2p\xbe\x9fI\x91m\xa5\xd6\x15S\x998\xdcL\xb8\x8eH\xe0\xda\xd4\x96\xcdFD\xa4\x96i\xd2\x7f\x9ey\x00\x94k\x0d\xabRigS\xd5\x0a"\x1d\xd6\xb8\xf1\xe4I$8\xea\x12{M$}\x05\xd2=\x87\x85W\x27\x83Ey\xb2\x8a\xe9\xccB\x14\xc3I|\xb5\xb9\xab~D\x7f\xf2[L\xf7\x11\x00\xc9\x8b\x85\xf3\x99\xadS\x1b\x9f!\x894\xd9r\x8a3\xd2 <K\xe0\x97\xb7\x8a{6\x1e\xce\x81\xb3\x97\x87\x96\xd5C\xc7P\xe8s*QgQVd\xea\xea:8\x072<\x8f%$\xb3/\xd7\xdd\xb0\x04\xc2p\xf6\xb5\xe3\x0a\xac\x27\x95\x1a:\xa9Z<!\xc7\\\xd2\xdf\x1c\xcbNJ\xcb\x9f1c\x17\x09\xe0\xc3\xbd\xbcU)\xe2\x9d\x11\xc8jq\xb4\x93\xe4\x97I\xc2N{H\xb7\x16{\x8c\x04\xb4\xcc/\xb9"\xae\x9e\x86\x9b\x8f0\xe7\xac\xdbA\xc6x\x96\x94,\xb6\x99(\xf7\x16Y\x1e\xdd\xdb\x07\xec\x9c0\xae0\xfc4\xb6\xfc\x19L\xcb\x92Q|";\xfa\xd0\xd3\xa7\xfe\xab\xc8\xb3 \x1e\x15\x9c4\xafP\xe8\xd2*\x92U\x11\xc6\xe2\xb9\xa2Cl\xbeK[[r#Q\x17Ne\xef\xda$@\x00\x00\x0bx\x0b\xeaV$"\x87\x16\xdd(\x91V\xf2\xe9\xb1\xdff[N\x1eHx\x96\xbdI\xcb\xf22#\xdb\xce2\xe9\x18\x99\x0d\x97(\xd2*LIvDI\x92\xe4JR2\xc9|*TE\xa7\xf2\xcc\xbf`\x18\xb3\xef;f\xe1\xa4\xc5M~\x935\xd9\xf4\xf6T\xccs\x8e\xf1!\xb7\x12g\xc5\xd5\xceYl\xdc<\xde\xc4\x98\xcd]4\x0a\xc4HN8\xdd6\x9c\x98o\xb2\xe2\xb2\xd7\xb1D\xa3I\xf3l=\x87\xee\x01\xef\x81~\xdb4\x03\x8b\x16\x87M\x9c\x88\xaa\x9e\x89\x92\xd7!\xc2R\xf8\xb9\xe4\x84\x16\xee}\xe65\x97\x15\xf7]\xbcjoR\xe3N6i\xd3$\xe4\xd3\x0b\xd0\xd1i5qu\xab\xdd\xb3y\x80\xdfbUs\xc1mZu\x11\xd7b;V\x92\x96\xd7Sr3\x9a\xc9D\xd9iFg\x9e\xf3\xde<\x0f\x11\xed\xc5\\\xcd\\%\x06{r\xdd\x80\xa8\xd2Q\xa9&\x82=$I\xd3\xfb\x00\xc0\xb5q%\x8b^\xdc\xa7Bj#\x8fH\x8d5n\xbcFdI[J,\x8c\x88\xf9\x95\xff\x00\x83"\x0d\xff\x00nPQ\x12\x0d\x0e\x9d9\x10\xd5PD\xd9\x8eHY-|]\xc8A\x16\xceb\xda\x03W\xe5\xa4\x1f\x12\xdd\xb0\x8d\x97\xcd\xca\xe4\x84\xba\xc2\x8f#$\x91/W\x1b\xf4\x11\x27\xbc\x00\x00\x00\x00\x00\x00\x00\x0bx\x01\x80\x00\x00\x00\x00\x00\xff\xd9')
img.append(b'\xff\xd8\xff\xe0\x00\x10JFIF\x00\x01\x01\x01\x00\x01\x00\x01\x00\x00\xff\xdb\x00C\x00\x0a\x07\x07\x08\x07\x06\x0a\x08\x08\x08\x0b\x0a\x0a\x0b\x0e\x18\x10\x0e\x0d\x0d\x0e\x1d\x15\x16\x11\x18#\x1f%$"\x1f"!&+7/&)4)!"0A149;>>>%.DIC<H7=>;\xff\xdb\x00C\x01\x0a\x0b\x0b\x0e\x0d\x0e\x1c\x10\x10\x1c;("(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\xff\xc0\x00\x11\x08\x00T\x00p\x03\x01!\x00\x02\x11\x01\x03\x11\x01\xff\xc4\x00\x1c\x00\x01\x00\x02\x03\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\x06\x03\x04\x08\x02\x01\x07\xff\xc4\x00?\x10\x00\x00\x05\x03\x01\x04\x05\x07\x0a\x06\x03\x00\x00\x00\x00\x00\x00\x01\x02\x03\x04\x05\x06\x11!\x1216t\x07\x13Q\xb1\xb3\x16\x17"A\x81\xb2\xd1\x147BUVaqu\x92\x94\x15#$2r\x91Tb\xc1\xff\xc4\x00\x14\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xc4\x00\x14\x11\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xda\x00\x0c\x03\x01\x00\x02\x11\x03\x11\x00?\x00\xfcd\x00\x06x0\xa4\xd4\xa6\xb3\x0a\x1bF\xf4\x87\xd6Hm\xb4\xefR\x8fq\x00\xb1\xf9\xb0\xbd~\xcf\xc8\xfdh\xf8\x87\x9b\x0b\xd7\xec\xfc\x8f\xd6\x8f\x88\x0c3:<\xbbi\xf0\x9e\x9b.\x88\xf3Q\xd8A\xad\xc5\x9a\x93\x84\xa4\xb7\x9e\xf1\xf6/G7|\xc8\x8c\xca\x8fC}\xc6_B\\md\xa4aI2\xc9\x1e\xfe\xc0\x19|\xd8^\xbfg\xe4~\xb4|C\xcd\x85\xeb\xf6~G\xebG\xc4\x05j\\G\xe0Kv$\xa6\xcd\xa7\xd9Y\xa1\xc4\x1e\xf4\xa8\xb7\x90\xc4\x00\x00\x00\x00,]\x1f\xf1\xf5\x13\x9do\xbc\x07U\x00\x0a\xf5\xfd\xc05\xceI\xce\xe1\xb1g\xf0e\x13\xf2\xf6<2\x012\x0096\xf3\xe3:\xc78\xe7\xbc!@\x00\x00\x00\x05\x87\xa3\xfe>\xa2s\xad\xf7\x80\xea\xb1T\xb6*3e\xdewdI\x12\\u\x88\x8f\xc7K\x0d\xa8\xf4l\x94\xd9\x99\xe3\xf10\x1bW\xf7\x00\xd79\x27;\x86\xc5\x9f\xc1\x94O\xcb\xd8\xf0\xc8\x04=\xc3T\x9d\x17\xa4\x9bZ\x03\x12\x9cn,\xb4\xc8\xeb\xd9I\xfa.l\xa3%\x9f\xc0\xc5\xc4\x07&\xde|gX\xe7\x1c\xf7\x84(\x00\x00\x00\x00\xb0\xf4\x7f\xc7\xd4Nu\xbe\xf0\x1dV)v\x87\x1f^\xbc\xc4o\x08\xc0I\xdf\xdc\x03\\\xe4\x9c\xee\x1b\x16\x7f\x06Q?/c\xc3 \x15\xcb\xa3\xe7b\xcd\xff\x00\x19^\x19\x8b\xe0\x0eM\xbc\xf8\xce\xb1\xce9\xef\x08P\x00\x00\x00\x01a\xe8\xff\x00\x8f\xa8\x9c\xeb}\xe0:\xacR\xed\x0e>\xbdy\x88\xde\x11\x80\x93\xbf\xb8\x06\xb9\xc99\xdc6,\xfe\x0c\xa2~^\xc7\x86@+\x97G\xce\xc5\x9b\xfe2\xbc3\x17\xc0\x1c\x9by\xf1\x9dc\x9cs\xde\x10\xa0\x00\x00\x00\x02\xc3\xd1\xff\x00\x1fQ9\xd6\xfb\xc0uX\xa5\xda\x1c}z\xf3\x11\xbc#\x019v\xd3\xe4\xd5\xad:\xa5>\x1a\x09r$\xc6[m\xa4\xcf\x04j2\xd3Q\x9a\xdc\x86\xfd>\xda\xa6B\x92\x92K\xf1\xe24\xd3\x89#\xc9\x12\x92\x82#\xd7\xf1 \x15{\xa5\x27\xe7V\xcd_\xa8\xcaQ{z\xb1t)\x91NY\xc4)-\x1c\x82N\xd1\xb3\xb6[d]\xbb;\xf0\x03\x94\xef>3\xacs\x8e{\xc2\x14\x00\x00\x00\x00X\xba?\xe3\xea\x27:\xdfx\x0e\xaa\x14\xbbD\xb1\x7f^\xbc\xc4_\x08\xc0]\x00\x05&\xe9#>\x93l\xbd>\x94\xbf\x08n5h\xbe\xdfI/]g)\xb3e\xc8\x84\xc11\xb2{Dx-s\xbb\xd4\x03\x9e/B2\xbd+\x04\x7f\xf3\x1d\xf7\x84 \x00\x00\x00\x00\xf6\xcb\xee\xc6y\x0f0\xea\xdau\x07\xb4\x85\xa1F\x95$\xfbH\xcbp\x09\x1f*.\x1f\xaf\xaa_\xbbs\xe217^\xac\xb2\xf3\xaf5V\x9c\xdb\xaf\x99\x1b\xabL\x95\x92\x9c2\xd0\xb6\x8f:\xfb@e\xf2\xa2\xe1\xfa\xfa\xa5\xfb\xb7>!\xe5E\xc3\xf5\xf5K\xf7n|@br\xbdXvCR\x1c\xabN[\xccg\xaaqR\x16jo;\xf6O9,\xfd\xc3/\x95\x17\x0f\xd7\xd5/\xdd\xb9\xf1\x01\x1a\xeb\xae>\xea\x9dy\xc58\xe2\xcf*Z\xcc\xcc\xd4}\xa6f<\x80\x00\x00\x00\x96\xaaZ\xf5\xaa2\xe1"|\x154u\x04\x12\xe3aIWXG\x8cc\x06z\xeaZ\x1e\xba\x8d\x9a\x85\x97U\xa47?\xf8\xa2\xa3B~\x0a\x1bY\xc6u\xf4\x9b\x8e\xa5fdF\x8d\x9c\x91\xe3\x1a\xeb\xa0\x08.\xad\xcfD\xb6\x15\xe9j\x9d7\x816\xb5\x1e\x12\x85\x19\x99gB\xf5v\x80\x9e\xa1\xd8\xb7\x1d\xc7\x01S\xe9p\x12\xf4d\xb8m\x9b\x8a}\xb6\xcbkM=%\x17i\x08\xaa\x9d&}\x1as\x90\xaa1\\\x8d!\xa3\xc2\x90\xb2\xff\x00\xdd\xc7\xec\x01\xf5\x14\x8a\x83\x94\xd7*I\x8a\xbf\x91\xb4\xeaZ[\xc7\xa1%fY"1\x9e\xbdoN\xb7**\x838\x90n\xa5\xb48\xa3i[I"Qd\xb5\xed\x01\x1b\xb0\xad\x9d\xbd\x93\xd93\xc6q\xa0\xfam\xac\x88\xcc\xd0\xa2$\xe3:n\xc8\x0f \x00\x04\x03\xf6\xa9\xd7\x8d\x05\x93i\xba\x9b\xad>\xed\x1e\x0cy\x94\xa3A\xe7i\xee\xa7d\xdb3/\xfbl\xab\x07\xeb/\xb8g\x9b[\xa1I~\xaf*\xb1*,\x86]\x8fKS\xc9J\x92\xa3^\x14f\xe1$\x8b\xb3:\x91\x00\xf6\x9a\x93\xa7{@~u\xc3@~\x8c\xa9\x8bT\x16Y4u\x8d\xb5\xd5\x9e\xce\xb8\xf4RZ\x11\x91\x9e\xf1\x19F\xb9\xa5Vi/\xb9L\xabQ\xa9\xb5\xd4N\xd9yRP\x86\x92q\x13\xfd\xa9F\x984\x96\xb9"\xd7\x7fh\x0d\x8a\xd5b\xc8]\xb3Y##\x91OUa+DxN\xa5\xb5-{\x09\xdaZH\xfe\x81\xa8\x95\xa9{\x06\x1a%z/I\x93j\x14\xca\x94eE\x84\xc9\xb1&)\x99\x9a\xfa\xa42dKJ\x97\xda\xa4\x99\xff\x00\xb0\x1e\x1b\xbc_\xb8\xed[\x97\xe4\x95(\x11\x1f\xf9\x7f\\\xcb2v\x11\xfd6\x08\xb0Y-OO\xf6%$\xdd\x10\xa6\xdc5z,\xb90\x1d\xa3\x1d\x0c\x96I\xc22\xe3\xa4\x94\xe3\xd3\xdej"3",\xe9\xec\x01\x82e^\x90\xaal\xc7\x1c\xa9\xd2Wj9K&\xe1\xd3\x90I\xeb\xd0\xfe\xc9}\x1cm\x12\xf3\x9d\x7f\x01\xeeE\xcd\x1aEv\xa5DzE5T\xb5P\x89Z\xa5\x1f\xccx\x9b,e^\xb5\x16\xec}\xc0?\x0f0\x00\x00\x00\x00\x00\x01+\x12\xe7\xad\xc1\xa2\xbdF\x8bQu\x98\x12\x0c\xcd\xd6Q\x82%d\xb0z\xef\xd7\xd6\x02(\x00\x00\x00\x00\x7f\xff\xd9')
'''
